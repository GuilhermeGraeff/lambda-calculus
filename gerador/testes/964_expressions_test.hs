main :: IO ()
main = print ( if  ( head ( (  (  (  False  )  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  ) ) )  then  let x0 =  let x0 =  True  in 8 in  let x0 =  False  in  (  (  (  ( x0 )  :  []  )  )  :  (  (  (  False  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  (  False  )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  (  True  )  :  ( x0 )  :  (  True  )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  []  )  )  :  (  (  (  True  )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  ( x0 )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  ( x0 )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  False  )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  []  )  else  let x0 =  let x0 = 8 in  (  (  False  )  :  []  )  in  (  (  (  (  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  )  )  :  []  )  ) )
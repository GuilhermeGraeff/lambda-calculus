main :: IO ()
main = print ( if  (  True  ||  True  )  then  if  True  &&  False  then  ( head ( (  (  ((\x0 ->   (  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   True ) )(7)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   False ) )(6) ) )( (  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(6)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   True ) )(3) ) )( (  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   True ) )(9)  )  :  (  ((\x1 ->   True ) )(9)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   False ) )(9) ) )( (  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(6)  )  :  (  ((\x1 ->   True ) )(8)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   True ) )(7)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   True ) )(1)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->   True ) )(6)  )  :  (  ((\x1 ->   False ) )(8)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   False ) )(3) ) )( (  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   True ) )(2)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->   False ) )(9)  )  :  (  ((\x1 ->   True ) )(3)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   True ) )(1)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   True ) )(1)  )  :  (  ((\x1 ->   False ) )(9)  )  :  (  ((\x1 ->   True ) )(2)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   False ) )(1) ) )( (  (  False  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   False ) )(6)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->   True ) )(9)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   False ) )(9)  )  :  (  ((\x1 ->   False ) )(1)  )  :  (  ((\x1 ->   True ) )(6)  )  :  (  ((\x1 ->   False ) )(4)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   False ) )(3) ) )( (  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   True ) )(1)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   True ) )(4)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   True ) )(3) ) )( (  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(6)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   False ) )(1)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   False ) )(1)  )  :  (  ((\x1 ->   True ) )(6)  )  :  (  ((\x1 ->   False ) )(3)  )  :  (  ((\x1 ->   True ) )(6)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   True ) )(6)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   True ) )(1)  )  :  (  ((\x1 ->   True ) )(2)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->   False ) )(1)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   True ) )(9)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->   True ) )(1)  )  :  (  ((\x1 ->   True ) )(8)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->   True ) )(10)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   True ) )(2)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->   True ) )(4)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   False ) )(3) ) )( (  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   True ) )(3)  )  :  (  ((\x1 ->   False ) )(6)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   True ) )(7)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   True ) )(1)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->   True ) )(3)  )  :  (  ((\x1 ->   True ) )(3)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   True ) )(5) ) )( (  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   True ) )(9)  )  :  (  ((\x1 ->   True ) )(9)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   True ) )(7)  )  :  (  ((\x1 ->   True ) )(7)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   False ) )(3)  )  :  (  ((\x1 ->   False ) )(10)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   False ) )(9) ) )( (  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(9)  )  :  (  ((\x1 ->   False ) )(1)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   True ) )(9)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->   True ) )(9)  )  :  (  ((\x1 ->   False ) )(6)  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->   False ) )(3) ) )( (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  []  ) ) )  else  ((\x0 ->   ((\x1 ->   (  (  ((\x2 ->  x0) )(1)  )  :  (  ((\x2 ->  x0) )(6)  )  :  (  ((\x2 ->   True ) )(5)  )  :  (  ((\x2 ->  x0) )(10)  )  :  []  ) ) )( ((\x1 ->   ((\x2 ->   True ) )(7) ) )( (  (  False  )  :  ( x0 )  :  (  True  )  :  (  True  )  :  []  ) ) ) ) )( True )  else  let x0 =  let x0 =  False  in  ((\x1 ->   True ) )(1)  in  ( head ( (  (  ((\x1 ->   (  (  ((\x2 ->   False ) )(7)  )  :  (  ((\x2 ->   False ) )(7)  )  :  (  ((\x2 ->   False ) )(1)  )  :  (  ((\x2 ->   True ) )(4)  )  :  (  ((\x2 ->   True ) )(8)  )  :  (  ((\x2 ->   False ) )(4)  )  :  (  ((\x2 ->   True ) )(6)  )  :  (  ((\x2 ->   True ) )(5)  )  :  (  ((\x2 ->   False ) )(3)  )  :  (  ((\x2 ->   False ) )(5)  )  :  (  ((\x2 ->   False ) )(8)  )  :  (  ((\x2 ->   False ) )(1)  )  :  (  ((\x2 ->   False ) )(7)  )  :  (  ((\x2 ->   False ) )(2)  )  :  (  ((\x2 ->   True ) )(5)  )  :  []  ) ) )( ((\x1 ->   ((\x2 ->   False ) )(2) ) )( (  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x1 ->   (  (  ((\x2 ->   False ) )(8)  )  :  (  ((\x2 ->   False ) )(1)  )  :  (  ((\x2 ->   True ) )(7)  )  :  (  ((\x2 ->   True ) )(10)  )  :  (  ((\x2 ->   True ) )(3)  )  :  (  ((\x2 ->   False ) )(1)  )  :  (  ((\x2 ->   True ) )(3)  )  :  (  ((\x2 ->   True ) )(4)  )  :  (  ((\x2 ->   True ) )(1)  )  :  (  ((\x2 ->   True ) )(7)  )  :  (  ((\x2 ->   False ) )(5)  )  :  (  ((\x2 ->   False ) )(8)  )  :  (  ((\x2 ->   False ) )(6)  )  :  []  ) ) )( ((\x1 ->   ((\x2 ->   True ) )(8) ) )( (  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x1 ->   (  (  ((\x2 ->   False ) )(5)  )  :  (  ((\x2 ->   False ) )(3)  )  :  []  ) ) )( ((\x1 ->   ((\x2 ->   True ) )(7) ) )( (  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  []  ) ) ) )
main :: IO ()
main = print ( ((\x0 ->   if  True  then  (  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( (  ( 5 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( (  ( 2 )  :  ( 7 )  :  ( 4 )  :  ( 5 )  :  ( 9 )  :  ( 2 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( (  ( 4 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( (  ( 4 )  :  ( 7 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( True ) ) )( (  ( 4 )  :  ( 1 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( (  ( 8 )  :  ( 8 )  :  ( 2 )  :  ( 5 )  :  ( 8 )  :  ( 5 )  :  ( 7 )  :  ( 10 )  :  ( 5 )  :  ( 2 )  :  ( 1 )  :  ( 6 )  :  ( 10 )  :  ( 9 )  :  ( 10 )  :  ( 2 )  :  ( 1 )  :  ( 1 )  :  ( 6 )  :  ( 5 )  :  ( 5 )  :  ( 1 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( (  ( 7 )  :  ( 1 )  :  ( 7 )  :  ( 7 )  :  ( 8 )  :  ( 2 )  :  ( 3 )  :  ( 6 )  :  ( 6 )  :  ( 4 )  :  ( 4 )  :  ( 6 )  :  ( 4 )  :  ( 3 )  :  ( 9 )  :  ( 4 )  :  ( 3 )  :  ( 1 )  :  ( 5 )  :  ( 4 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( (  ( 5 )  :  ( 10 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( (  ( 3 )  :  ( 5 )  :  ( 9 )  :  ( 9 )  :  ( 9 )  :  ( 8 )  :  ( 9 )  :  ( 2 )  :  ( 4 )  :  ( 10 )  :  ( 8 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( (  ( 4 )  :  ( 5 )  :  ( 9 )  :  ( 2 )  :  ( 3 )  :  ( 10 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( (  ( 2 )  :  ( 9 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( (  ( 3 )  :  ( 3 )  :  ( 5 )  :  ( 9 )  :  ( 4 )  :  ( 10 )  :  ( 5 )  :  ( 2 )  :  ( 3 )  :  ( 2 )  :  ( 3 )  :  ( 1 )  :  ( 6 )  :  ( 5 )  :  ( 4 )  :  ( 8 )  :  ( 3 )  :  ( 3 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( (  ( 8 )  :  ( 5 )  :  ( 9 )  :  ( 5 )  :  ( 4 )  :  ( 6 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( (  ( 10 )  :  ( 7 )  :  ( 10 )  :  ( 4 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( (  ( 2 )  :  ( 2 )  :  ( 1 )  :  ( 8 )  :  ( 6 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( True ) ) )( (  ( 1 )  :  ( 6 )  :  ( 8 )  :  ( 2 )  :  ( 4 )  :  ( 1 )  :  ( 7 )  :  ( 6 )  :  ( 7 )  :  ( 7 )  :  ( 6 )  :  ( 8 )  :  ( 2 )  :  ( 7 )  :  ( 1 )  :  ( 10 )  :  ( 5 )  :  ( 7 )  :  ( 5 )  :  ( 7 )  :  ( 9 )  :  ( 5 )  :  ( 5 )  :  ( 2 )  :  ( 7 )  :  ( 9 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( (  ( 4 )  :  ( 5 )  :  ( 6 )  :  ( 7 )  :  ( 6 )  :  ( 2 )  :  ( 8 )  :  ( 2 )  :  ( 7 )  :  ( 8 )  :  ( 8 )  :  ( 1 )  :  ( 4 )  :  ( 10 )  :  ( 4 )  :  ( 2 )  :  ( 3 )  :  ( 5 )  :  ( 4 )  :  ( 2 )  :  ( 9 )  :  ( 7 )  :  ( 2 )  :  ( 5 )  :  ( 10 )  :  ( 7 )  :  ( 2 )  :  ( 7 )  :  ( 1 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( (  ( 3 )  :  ( 1 )  :  ( 1 )  :  ( 9 )  :  ( 4 )  :  ( 4 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( (  ( 4 )  :  ( 9 )  :  ( 5 )  :  ( 9 )  :  ( 2 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( (  ( 1 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( (  ( 2 )  :  ( 6 )  :  ( 4 )  :  ( 10 )  :  ( 10 )  :  ( 2 )  :  ( 7 )  :  ( 7 )  :  ( 1 )  :  ( 3 )  :  ( 1 )  :  ( 2 )  :  ( 3 )  :  ( 7 )  :  ( 1 )  :  ( 4 )  :  ( 9 )  :  ( 4 )  :  ( 7 )  :  ( 5 )  :  ( 4 )  :  ( 8 )  :  ( 5 )  :  []  ) )  )  :  []  )  else  (  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( (  ( 6 )  :  ( 8 )  :  ( 7 )  :  ( 6 )  :  ( 5 )  :  ( 5 )  :  ( 9 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( (  ( 2 )  :  ( 9 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( True ) ) )( (  ( 9 )  :  ( 8 )  :  ( 2 )  :  ( 7 )  :  ( 8 )  :  ( 5 )  :  ( 7 )  :  ( 7 )  :  ( 2 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( (  ( 9 )  :  ( 2 )  :  ( 6 )  :  ( 5 )  :  ( 5 )  :  ( 8 )  :  ( 10 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( (  ( 4 )  :  ( 2 )  :  ( 10 )  :  ( 10 )  :  ( 6 )  :  ( 8 )  :  ( 10 )  :  ( 1 )  :  []  ) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( (  ( 2 )  :  ( 4 )  :  []  ) )  )  :  []  ) ) )( let x0 =  ( head ( (  (  (  ( 10 )  :  ( 9 )  :  ( 6 )  :  ( 2 )  :  []  )  )  :  (  (  ( 5 )  :  ( 7 )  :  ( 7 )  :  ( 10 )  :  ( 6 )  :  ( 10 )  :  ( 7 )  :  ( 7 )  :  ( 5 )  :  ( 3 )  :  ( 7 )  :  ( 7 )  :  ( 9 )  :  ( 8 )  :  []  )  )  :  (  (  ( 10 )  :  ( 6 )  :  ( 6 )  :  ( 5 )  :  ( 6 )  :  ( 3 )  :  ( 7 )  :  ( 3 )  :  ( 9 )  :  ( 7 )  :  ( 10 )  :  ( 5 )  :  ( 6 )  :  ( 6 )  :  ( 3 )  :  []  )  )  :  (  (  ( 10 )  :  []  )  )  :  (  (  ( 2 )  :  ( 4 )  :  []  )  )  :  (  (  ( 10 )  :  ( 1 )  :  ( 9 )  :  ( 10 )  :  ( 6 )  :  ( 9 )  :  ( 10 )  :  ( 4 )  :  ( 10 )  :  ( 6 )  :  ( 5 )  :  ( 9 )  :  ( 3 )  :  ( 2 )  :  ( 2 )  :  ( 2 )  :  ( 6 )  :  ( 5 )  :  ( 7 )  :  []  )  )  :  (  (  ( 2 )  :  ( 5 )  :  ( 9 )  :  ( 1 )  :  ( 1 )  :  ( 4 )  :  ( 9 )  :  ( 1 )  :  []  )  )  :  (  (  ( 9 )  :  ( 1 )  :  ( 6 )  :  ( 2 )  :  ( 4 )  :  ( 4 )  :  []  )  )  :  (  (  ( 7 )  :  ( 3 )  :  []  )  )  :  []  ) ) )  in  let x1 = 1 in  ((\x2 ->   (  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  ) ) )( ((\x2 ->  7) )(5) ) ) )
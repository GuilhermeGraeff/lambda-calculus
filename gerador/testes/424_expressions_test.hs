main :: IO ()
main = print ( if  (  False  )  then  let x0 =  ( head ( (  (  ((\x0 ->  2) )( False )  )  :  (  ((\x0 ->  4) )( True )  )  :  (  ((\x0 ->  7) )( True )  )  :  (  ((\x0 ->  10) )( True )  )  :  (  ((\x0 ->  2) )( True )  )  :  (  ((\x0 ->  8) )( True )  )  :  (  ((\x0 ->  10) )( False )  )  :  (  ((\x0 ->  2) )( False )  )  :  (  ((\x0 ->  8) )( True )  )  :  (  ((\x0 ->  5) )( False )  )  :  (  ((\x0 ->  9) )( False )  )  :  (  ((\x0 ->  3) )( True )  )  :  (  ((\x0 ->  3) )( True )  )  :  (  ((\x0 ->  6) )( False )  )  :  (  ((\x0 ->  10) )( True )  )  :  (  ((\x0 ->  6) )( True )  )  :  (  ((\x0 ->  1) )( True )  )  :  (  ((\x0 ->  1) )( False )  )  :  (  ((\x0 ->  5) )( False )  )  :  (  ((\x0 ->  9) )( True )  )  :  (  ((\x0 ->  9) )( False )  )  :  (  ((\x0 ->  10) )( True )  )  :  []  ) ) )  in  let x0 =  False  in  (  (  ((\x1 ->   ((\x2 ->  x2) )(x0) ) )( ((\x1 ->  x1) )(1) )  )  :  []  )  else  (  ( head ( (  (  (  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( ((\x0 ->  x0) )(2) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  x0) )(4) )  )  :  []  )  )  :  (  (  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  x0) )(2) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( ((\x0 ->  9) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( ((\x0 ->  x0) )(2) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  6) )(5) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( ((\x0 ->  x0) )(1) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( ((\x0 ->  7) )(10) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  2) )(5) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  x0) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  x0) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( ((\x0 ->  x0) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( ((\x0 ->  x0) )(1) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( ((\x0 ->  x0) )(9) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( ((\x0 ->  x0) )(1) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( True ) ) )( ((\x0 ->  2) )(1) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( ((\x0 ->  x0) )(3) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( ((\x0 ->  x0) )(9) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( ((\x0 ->  1) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  x0) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( ((\x0 ->  x0) )(10) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( ((\x0 ->  8) )(1) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( ((\x0 ->  x0) )(9) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( ((\x0 ->  x0) )(3) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  10) )(3) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( ((\x0 ->  x0) )(3) )  )  :  []  )  )  :  (  (  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( ((\x0 ->  x0) )(6) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  x0) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( ((\x0 ->  x0) )(9) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( ((\x0 ->  x0) )(2) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  3) )(10) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  x0) )(10) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  2) )(7) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( True ) ) )( ((\x0 ->  x0) )(6) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( True ) ) )( ((\x0 ->  x0) )(10) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  8) )(10) )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( ((\x0 ->  1) )(9) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( ((\x0 ->  x0) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( ((\x0 ->  x0) )(10) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( ((\x0 ->  7) )(4) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( ((\x0 ->  9) )(10) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( ((\x0 ->  x0) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( ((\x0 ->  x0) )(4) )  )  :  []  )  )  :  []  ) ) )  ) )
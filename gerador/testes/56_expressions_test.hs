main :: IO ()
main = print ( let x0 =  (  if  True  then  (  (  (  ( 9 )  :  ( 2 )  :  ( 10 )  :  ( 8 )  :  ( 5 )  :  ( 7 )  :  ( 4 )  :  ( 2 )  :  ( 1 )  :  ( 6 )  :  ( 5 )  :  ( 9 )  :  ( 6 )  :  ( 8 )  :  ( 1 )  :  ( 1 )  :  ( 2 )  :  ( 9 )  :  ( 10 )  :  ( 1 )  :  ( 5 )  :  ( 2 )  :  ( 7 )  :  []  )  )  :  (  (  ( 2 )  :  ( 9 )  :  ( 9 )  :  ( 7 )  :  ( 4 )  :  []  )  )  :  []  )  else  (  (  (  ( 6 )  :  []  )  )  :  (  (  ( 2 )  :  ( 9 )  :  ( 10 )  :  ( 9 )  :  ( 3 )  :  ( 2 )  :  ( 5 )  :  ( 7 )  :  ( 7 )  :  ( 9 )  :  ( 4 )  :  ( 7 )  :  ( 6 )  :  ( 7 )  :  ( 6 )  :  ( 9 )  :  ( 1 )  :  ( 10 )  :  ( 3 )  :  ( 6 )  :  []  )  )  :  (  (  ( 1 )  :  ( 2 )  :  ( 1 )  :  ( 7 )  :  ( 1 )  :  ( 1 )  :  ( 7 )  :  ( 3 )  :  ( 10 )  :  ( 3 )  :  ( 7 )  :  ( 10 )  :  ( 1 )  :  []  )  )  :  []  )  )  in  let x1 =  let x0 =  True  in  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  (  True  )  :  ( x0 )  :  (  True  )  :  (  True  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  False  )  :  (  True  )  :  ( x0 )  :  (  True  )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  True  )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  []  )  in  let x2 =  False  in  (  (  ((\x3 ->   (  ( 4 )  :  ( 4 )  :  ( 6 )  :  ( 2 )  :  ( 5 )  :  ( 1 )  :  ( 1 )  :  ( 9 )  :  ( 4 )  :  ( 8 )  :  ( 8 )  :  ( 5 )  :  ( 10 )  :  ( 5 )  :  ( 2 )  :  ( 7 )  :  ( 6 )  :  ( 9 )  :  ( 10 )  :  ( 8 )  :  ( 6 )  :  ( 7 )  :  ( 1 )  :  ( 1 )  :  ( 1 )  :  ( 9 )  :  []  ) ) )( ((\x3 ->  x3) )(x2) )  )  :  (  ((\x3 ->   (  ( 7 )  :  ( 6 )  :  ( 9 )  :  ( 5 )  :  ( 10 )  :  ( 8 )  :  ( 1 )  :  ( 9 )  :  ( 10 )  :  ( 10 )  :  ( 5 )  :  ( 2 )  :  ( 2 )  :  ( 9 )  :  ( 8 )  :  ( 9 )  :  ( 3 )  :  []  ) ) )( ((\x3 ->   True ) )(x2) )  )  :  (  ((\x3 ->   (  ( 4 )  :  ( 7 )  :  ( 2 )  :  ( 8 )  :  ( 3 )  :  ( 7 )  :  ( 6 )  :  ( 5 )  :  ( 7 )  :  ( 2 )  :  ( 6 )  :  ( 7 )  :  ( 8 )  :  ( 8 )  :  ( 2 )  :  ( 4 )  :  ( 7 )  :  ( 7 )  :  ( 6 )  :  ( 9 )  :  ( 9 )  :  ( 6 )  :  ( 3 )  :  ( 8 )  :  []  ) ) )( ((\x3 ->  x3) )(x2) )  )  :  (  ((\x3 ->   (  ( 2 )  :  []  ) ) )( ((\x3 ->   False ) )(x2) )  )  :  (  ((\x3 ->   (  ( 8 )  :  []  ) ) )( ((\x3 ->   True ) )(x2) )  )  :  (  ((\x3 ->   (  ( 2 )  :  ( 3 )  :  ( 7 )  :  ( 9 )  :  ( 9 )  :  ( 1 )  :  ( 7 )  :  ( 8 )  :  ( 3 )  :  []  ) ) )( ((\x3 ->  x3) )( False ) )  )  :  (  ((\x3 ->   (  ( 9 )  :  ( 4 )  :  ( 3 )  :  ( 5 )  :  ( 2 )  :  ( 10 )  :  ( 7 )  :  ( 5 )  :  ( 3 )  :  ( 6 )  :  ( 7 )  :  ( 9 )  :  []  ) ) )( ((\x3 ->   False ) )( False ) )  )  :  (  ((\x3 ->   (  ( 10 )  :  ( 7 )  :  ( 7 )  :  ( 2 )  :  ( 8 )  :  ( 1 )  :  ( 3 )  :  ( 9 )  :  ( 10 )  :  ( 5 )  :  ( 9 )  :  ( 1 )  :  ( 6 )  :  ( 8 )  :  ( 3 )  :  ( 3 )  :  ( 2 )  :  ( 2 )  :  ( 6 )  :  []  ) ) )( ((\x3 ->  x3) )( False ) )  )  :  (  ((\x3 ->   (  ( 8 )  :  ( 6 )  :  ( 7 )  :  ( 1 )  :  ( 1 )  :  ( 2 )  :  ( 4 )  :  ( 8 )  :  []  ) ) )( ((\x3 ->  x3) )( False ) )  )  :  []  ) )
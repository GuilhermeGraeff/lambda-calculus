main :: IO ()
main = print ( let x0 =  (  True  &&  False  )  in  if  (  False  )  then  ((\x0 ->   ((\x1 ->   (  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->   False ) )( False )  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->   True ) )( False )  )  :  []  ) ) )( (  (  ((\x1 ->   True ) )(3)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->  x0) )(9)  )  :  (  ((\x1 ->   True ) )(6)  )  :  (  ((\x1 ->  x0) )(9)  )  :  (  ((\x1 ->  x0) )(1)  )  :  (  ((\x1 ->  x0) )(8)  )  :  (  ((\x1 ->   False ) )(9)  )  :  (  ((\x1 ->   False ) )(4)  )  :  []  ) ) ) )( False )  else  ( head ( (  (  ((\x1 ->   (  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->   False ) )(x0)  )  :  []  ) ) )( (  (  ((\x1 ->  x0) )(2)  )  :  []  ) )  )  :  (  ((\x1 ->   (  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->   False ) )(x0)  )  :  []  ) ) )( (  (  ((\x1 ->   True ) )(7)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->   False ) )(8)  )  :  []  ) )  )  :  (  ((\x1 ->   (  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->   False ) )(x0)  )  :  []  ) ) )( (  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->  x0) )(10)  )  :  []  ) )  )  :  (  ((\x1 ->   (  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->   True ) )(x0)  )  :  []  ) ) )( (  (  ((\x1 ->   True ) )(2)  )  :  []  ) )  )  :  (  ((\x1 ->   (  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->   False ) )( False )  )  :  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->   False ) )(x0)  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )( False )  )  :  []  ) ) )( (  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->   False ) )(3)  )  :  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   True ) )(8)  )  :  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->  x0) )(10)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->  x0) )(1)  )  :  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->  x0) )(9)  )  :  (  ((\x1 ->   False ) )(9)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->  x0) )(9)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->   True ) )(3)  )  :  []  ) )  )  :  (  ((\x1 ->   (  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   True ) )(x0)  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->  x2) )( False )  )  :  []  ) ) )( (  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->   True ) )(7)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   False ) )(1)  )  :  []  ) )  )  :  (  ((\x1 ->   (  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->  x2) )(x0)  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->   False ) )( False )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->  x2) )( False )  )  :  []  ) ) )( (  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->   True ) )(7)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   True ) )(2)  )  :  (  ((\x1 ->  x0) )(9)  )  :  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->  x0) )(1)  )  :  (  ((\x1 ->  x0) )(1)  )  :  []  ) )  )  :  []  ) ) ) )
main :: IO ()
main = print ( if  if  True  then  True  else  True  ||  True  then  ((\x0 ->   ((\x1 ->   False ) )( ((\x1 ->   ((\x2 ->  8) )( False ) ) )( (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  ) ) ) ) )( if  False  then  ((\x0 ->  x0) )( True )  else  ((\x0 ->  x0) )( False ) )  else  ( head ( (  (  let x0 =  False  in  ((\x1 ->  x0) )( ((\x1 ->   ((\x2 ->  7) )(x0) ) )( (  ( x0 )  :  ( x0 )  :  ( x0 )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  1) )( False ) ) )( (  (  False  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  10) )( False ) ) )( (  (  True  )  :  (  False  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  2) )( True ) ) )( (  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  7) )( True ) ) )( (  (  False  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  8) )( True ) ) )( (  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  6) )( False ) ) )( (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  7) )( True ) ) )( (  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  7) )( True ) ) )( (  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  7) )( False ) ) )( (  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  2) )( True ) ) )( (  (  False  )  :  (  False  )  :  (  True  )  :  []  ) ) )  )  :  []  ) ) ) )
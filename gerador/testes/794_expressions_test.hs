main :: IO ()
main = print ( if  ( head ( (  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  ) ) )  then  let x0 =  ((\x0 ->  x0) )( False )  in  ((\x1 ->   ((\x2 ->   ((\x3 ->   (  ( x2 )  :  ( x2 )  :  ( x2 )  :  (  True  )  :  ( x2 )  :  ( x2 )  :  (  True  )  :  (  True  )  :  ( x2 )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  ( x2 )  :  (  False  )  :  ( x2 )  :  ( x2 )  :  ( x2 )  :  (  True  )  :  (  True  )  :  ( x2 )  :  (  False  )  :  (  True  )  :  ( x2 )  :  ( x2 )  :  ( x2 )  :  ( x2 )  :  []  ) ) )( ((\x3 ->   False ) )(x1) ) ) )( True ) ) )(7)  else  if  let x0 =  True  in  True  then  (  ((\x0 ->   ((\x1 ->   (  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  (  True  )  :  []  ) ) )( ((\x1 ->  x0) )(3) ) ) )( False )  )  else  let x0 =  True  in  ((\x1 ->   ((\x2 ->   (  (  False  )  :  ( x1 )  :  []  ) ) )( ((\x2 ->  x1) )(10) ) ) )(x0) )
main :: IO ()
main = print ( if  True  then  let x0 =  ((\x0 ->   True ) )( False )  in  ( head ( (  (  ((\x1 ->   ((\x2 ->   (  ( x0 )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  (  True  )  :  []  ) ) )( (  ( 3 )  :  ( 3 )  :  ( 9 )  :  ( 1 )  :  ( 8 )  :  ( 9 )  :  ( 4 )  :  []  ) ) ) )( (  ( 7 )  :  ( 2 )  :  ( 3 )  :  []  ) )  )  :  (  ((\x1 ->   ((\x2 ->   (  ( x0 )  :  (  True  )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  (  False  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  False  )  :  []  ) ) )( (  ( 5 )  :  ( 7 )  :  []  ) ) ) )( (  ( 2 )  :  ( 9 )  :  ( 5 )  :  ( 1 )  :  ( 6 )  :  ( 1 )  :  ( 4 )  :  ( 7 )  :  ( 9 )  :  []  ) )  )  :  []  ) ) )  else  ((\x0 ->   ((\x1 ->   ((\x2 ->   (  (  False  )  :  ( x0 )  :  (  False  )  :  (  False  )  :  ( x0 )  :  (  False  )  :  (  False  )  :  ( x0 )  :  (  False  )  :  (  True  )  :  (  False  )  :  ( x0 )  :  (  True  )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  (  False  )  :  (  True  )  :  ( x0 )  :  (  False  )  :  (  True  )  :  (  True  )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  (  True  )  :  []  ) ) )( (  ( 3 )  :  ( 10 )  :  ( 3 )  :  ( 9 )  :  ( 9 )  :  ( 10 )  :  ( 9 )  :  ( 8 )  :  []  ) ) ) )( (  ( 7 )  :  ( 5 )  :  ( 10 )  :  ( 2 )  :  ( 3 )  :  ( 1 )  :  ( 8 )  :  ( 9 )  :  []  ) ) ) )( True  &&  True ) )
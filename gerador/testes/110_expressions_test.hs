main :: IO ()
main = print ( let x0 =  (  let x0 = 6 in  (  (  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( 7 )  :  ( 4 )  :  ( x0 )  :  ( 4 )  :  ( 6 )  :  ( x0 )  :  ( 8 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  ( 2 )  :  ( x0 )  :  ( x0 )  :  ( 10 )  :  ( 8 )  :  ( x0 )  :  ( x0 )  :  ( 8 )  :  ( 3 )  :  ( 2 )  :  ( x0 )  :  ( 10 )  :  ( 2 )  :  ( x0 )  :  ( x0 )  :  ( 6 )  :  ( 2 )  :  ( 2 )  :  ( 3 )  :  []  )  )  :  (  (  ( 2 )  :  ( 6 )  :  ( x0 )  :  ( 5 )  :  ( 2 )  :  ( 4 )  :  ( x0 )  :  ( x0 )  :  ( 2 )  :  ( 5 )  :  ( 5 )  :  ( x0 )  :  ( 3 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( 5 )  :  ( 5 )  :  ( x0 )  :  ( x0 )  :  ( 9 )  :  ( 9 )  :  ( x0 )  :  ( x0 )  :  ( 3 )  :  ( 6 )  :  ( 5 )  :  ( 3 )  :  ( 3 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( 10 )  :  ( x0 )  :  ( 9 )  :  ( x0 )  :  ( x0 )  :  ( 3 )  :  ( x0 )  :  ( 5 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( 3 )  :  ( 6 )  :  ( x0 )  :  ( 3 )  :  ( 10 )  :  ( 8 )  :  ( x0 )  :  ( 2 )  :  ( x0 )  :  ( x0 )  :  ( 1 )  :  ( x0 )  :  ( x0 )  :  ( 1 )  :  ( x0 )  :  ( x0 )  :  ( 7 )  :  []  )  )  :  (  (  ( 8 )  :  ( 7 )  :  ( 7 )  :  ( 8 )  :  ( 10 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( 3 )  :  ( 4 )  :  ( x0 )  :  ( 1 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( 7 )  :  ( x0 )  :  ( 2 )  :  ( x0 )  :  ( x0 )  :  ( 4 )  :  ( 3 )  :  ( 9 )  :  ( 7 )  :  ( x0 )  :  ( x0 )  :  ( 3 )  :  ( x0 )  :  ( 7 )  :  ( x0 )  :  ( 4 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( 8 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( 10 )  :  ( 2 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  ( 7 )  :  ( 6 )  :  ( 8 )  :  ( 2 )  :  ( 3 )  :  ( x0 )  :  ( 2 )  :  ( 7 )  :  ( x0 )  :  ( 8 )  :  ( x0 )  :  ( 2 )  :  ( 6 )  :  ( 3 )  :  []  )  )  :  (  (  ( 1 )  :  ( 4 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( 2 )  :  ( x0 )  :  []  )  )  :  []  )  )  in  if  if  False  then  False  else  True  then  ( head ( (  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   True ) )( False )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   True ) )( True )  )  :  []  ) ) )  else  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )(3) )
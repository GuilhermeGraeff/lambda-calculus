main :: IO ()
main = print ( (  if  let x0 =  False  in  False  then  let x0 =  False  in  (  (  ((\x1 ->  x0) )( ((\x1 ->  1) )( False ) )  )  :  (  ((\x1 ->  x0) )( ((\x1 ->  5) )(x0) )  )  :  (  ((\x1 ->   True ) )( ((\x1 ->  7) )( True ) )  )  :  (  ((\x1 ->   True ) )( ((\x1 ->  7) )( True ) )  )  :  (  ((\x1 ->   True ) )( ((\x1 ->  10) )( False ) )  )  :  (  ((\x1 ->   False ) )( ((\x1 ->  10) )( True ) )  )  :  (  ((\x1 ->  x0) )( ((\x1 ->  10) )( True ) )  )  :  []  )  else  let x0 =  True  in  (  (  ((\x1 ->  x0) )( ((\x1 ->  2) )(x0) )  )  :  (  ((\x1 ->   False ) )( ((\x1 ->  1) )( True ) )  )  :  (  ((\x1 ->  x0) )( ((\x1 ->  4) )(x0) )  )  :  (  ((\x1 ->   False ) )( ((\x1 ->  4) )( True ) )  )  :  (  ((\x1 ->   True ) )( ((\x1 ->  5) )(x0) )  )  :  (  ((\x1 ->  x0) )( ((\x1 ->  8) )(x0) )  )  :  []  )  ) )
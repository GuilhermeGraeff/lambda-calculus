main :: IO ()
main = print ( ((\x0 ->   let x1 =  False  in  (  (  ((\x2 ->   False ) )( (  ( 2 )  :  ( 2 )  :  ( 6 )  :  ( 7 )  :  ( 3 )  :  ( 9 )  :  ( 6 )  :  ( 7 )  :  ( 6 )  :  ( 7 )  :  ( 9 )  :  ( 3 )  :  ( 3 )  :  ( 4 )  :  ( 1 )  :  ( 3 )  :  ( 4 )  :  ( 2 )  :  ( 6 )  :  ( 1 )  :  ( 7 )  :  ( 1 )  :  ( 5 )  :  ( 8 )  :  ( 8 )  :  ( 1 )  :  ( 3 )  :  ( 6 )  :  ( 10 )  :  ( 4 )  :  ( 2 )  :  ( 8 )  :  ( 10 )  :  ( 9 )  :  ( 10 )  :  ( 6 )  :  ( 4 )  :  ( 8 )  :  ( 3 )  :  ( 8 )  :  ( 5 )  :  ( 3 )  :  ( 5 )  :  ( 8 )  :  ( 1 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 4 )  :  ( 1 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 10 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 6 )  :  ( 6 )  :  ( 10 )  :  ( 10 )  :  ( 2 )  :  ( 6 )  :  ( 2 )  :  ( 8 )  :  ( 4 )  :  ( 3 )  :  ( 3 )  :  ( 7 )  :  ( 8 )  :  ( 9 )  :  ( 4 )  :  ( 4 )  :  ( 6 )  :  ( 6 )  :  ( 7 )  :  ( 3 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 8 )  :  ( 3 )  :  ( 10 )  :  ( 8 )  :  ( 3 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 2 )  :  ( 10 )  :  ( 2 )  :  ( 10 )  :  ( 10 )  :  ( 2 )  :  ( 5 )  :  ( 5 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 6 )  :  ( 7 )  :  ( 2 )  :  ( 7 )  :  ( 7 )  :  ( 7 )  :  ( 4 )  :  ( 10 )  :  ( 8 )  :  ( 1 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 1 )  :  ( 8 )  :  ( 6 )  :  ( 10 )  :  ( 5 )  :  ( 3 )  :  ( 10 )  :  ( 1 )  :  ( 8 )  :  ( 5 )  :  ( 8 )  :  ( 5 )  :  ( 8 )  :  ( 1 )  :  ( 6 )  :  ( 8 )  :  ( 9 )  :  ( 7 )  :  ( 1 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 2 )  :  ( 3 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 4 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 4 )  :  ( 6 )  :  ( 9 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 8 )  :  ( 9 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 4 )  :  ( 8 )  :  ( 3 )  :  ( 7 )  :  ( 5 )  :  ( 6 )  :  ( 3 )  :  ( 6 )  :  ( 3 )  :  ( 1 )  :  ( 1 )  :  ( 1 )  :  ( 7 )  :  ( 8 )  :  ( 6 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 1 )  :  ( 7 )  :  ( 7 )  :  ( 7 )  :  ( 10 )  :  ( 5 )  :  ( 2 )  :  ( 1 )  :  ( 9 )  :  ( 4 )  :  ( 7 )  :  ( 5 )  :  ( 5 )  :  ( 6 )  :  ( 5 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 3 )  :  ( 5 )  :  ( 10 )  :  ( 2 )  :  ( 7 )  :  ( 6 )  :  ( 3 )  :  ( 5 )  :  ( 4 )  :  ( 9 )  :  ( 6 )  :  ( 4 )  :  ( 9 )  :  ( 1 )  :  ( 1 )  :  ( 3 )  :  ( 7 )  :  ( 1 )  :  ( 4 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 10 )  :  ( 4 )  :  ( 8 )  :  ( 1 )  :  ( 3 )  :  ( 10 )  :  ( 6 )  :  ( 1 )  :  ( 5 )  :  ( 6 )  :  ( 6 )  :  ( 8 )  :  ( 5 )  :  ( 5 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 6 )  :  ( 6 )  :  ( 3 )  :  ( 2 )  :  ( 5 )  :  ( 6 )  :  ( 7 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 8 )  :  ( 7 )  :  ( 3 )  :  ( 1 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 3 )  :  ( 7 )  :  ( 9 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 7 )  :  ( 10 )  :  ( 4 )  :  ( 2 )  :  ( 1 )  :  ( 7 )  :  ( 7 )  :  ( 6 )  :  ( 3 )  :  ( 6 )  :  ( 4 )  :  ( 6 )  :  ( 8 )  :  ( 3 )  :  ( 5 )  :  ( 10 )  :  ( 3 )  :  ( 2 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 10 )  :  ( 8 )  :  ( 6 )  :  ( 10 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 8 )  :  ( 1 )  :  ( 10 )  :  ( 7 )  :  ( 10 )  :  ( 4 )  :  ( 8 )  :  ( 4 )  :  ( 3 )  :  ( 8 )  :  ( 4 )  :  ( 2 )  :  ( 9 )  :  ( 9 )  :  ( 8 )  :  ( 6 )  :  ( 8 )  :  ( 1 )  :  ( 9 )  :  ( 9 )  :  ( 9 )  :  ( 1 )  :  ( 3 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 8 )  :  ( 2 )  :  ( 6 )  :  ( 7 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 4 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 9 )  :  ( 4 )  :  ( 6 )  :  ( 6 )  :  ( 6 )  :  ( 4 )  :  ( 1 )  :  ( 9 )  :  ( 2 )  :  ( 7 )  :  ( 8 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 3 )  :  ( 10 )  :  ( 7 )  :  ( 1 )  :  ( 3 )  :  ( 7 )  :  ( 9 )  :  ( 6 )  :  ( 8 )  :  ( 1 )  :  ( 2 )  :  ( 1 )  :  ( 2 )  :  ( 3 )  :  ( 6 )  :  ( 7 )  :  ( 7 )  :  ( 8 )  :  ( 8 )  :  ( 3 )  :  ( 10 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 5 )  :  ( 3 )  :  ( 7 )  :  ( 5 )  :  ( 7 )  :  ( 7 )  :  ( 7 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 9 )  :  ( 4 )  :  ( 3 )  :  []  ) )  )  :  (  ((\x2 ->   False ) )( (  ( 9 )  :  ( 8 )  :  ( 6 )  :  ( 6 )  :  ( 7 )  :  ( 1 )  :  ( 1 )  :  ( 10 )  :  ( 9 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 1 )  :  ( 8 )  :  ( 3 )  :  ( 9 )  :  ( 8 )  :  ( 1 )  :  ( 5 )  :  ( 5 )  :  ( 3 )  :  ( 6 )  :  ( 7 )  :  ( 1 )  :  ( 8 )  :  ( 8 )  :  ( 4 )  :  ( 1 )  :  ( 4 )  :  ( 8 )  :  ( 6 )  :  ( 2 )  :  []  ) )  )  :  (  ((\x2 ->   True ) )( (  ( 9 )  :  ( 4 )  :  ( 4 )  :  ( 1 )  :  ( 9 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 10 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 10 )  :  ( 4 )  :  ( 9 )  :  ( 7 )  :  ( 10 )  :  ( 9 )  :  ( 3 )  :  ( 3 )  :  ( 8 )  :  ( 4 )  :  ( 5 )  :  ( 1 )  :  ( 4 )  :  ( 6 )  :  ( 10 )  :  ( 9 )  :  ( 2 )  :  ( 1 )  :  []  ) )  )  :  (  ((\x2 ->  x1) )( (  ( 6 )  :  ( 2 )  :  ( 7 )  :  []  ) )  )  :  []  ) ) )( let x0 =  let x0 =  True  in  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  (  True  )  :  (  False  )  :  ( x0 )  :  (  True  )  :  (  False  )  :  ( x0 )  :  []  )  in  ((\x0 ->   True ) )( True ) ) )
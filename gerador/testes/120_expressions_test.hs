main :: IO ()
main = print ( if  let x0 =  ((\x0 ->   ((\x1 ->  10) )(x0) ) )(2)  in  let x1 =  True  in x1 then  ((\x0 ->   ((\x1 ->   ((\x2 ->   ((\x3 ->  x2) )(2) ) )( False ) ) )( ((\x1 ->   (  (  True  )  :  (  False  )  :  (  False  )  :  ( x0 )  :  []  ) ) )( (  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  ) ) ) ) )( let x0 =  False  in  False )  else  (  (  ((\x0 ->   ((\x1 ->   ((\x2 ->   True ) )(2) ) )( True ) ) )( ((\x0 ->   (  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )( (  (  False  )  :  (  True  )  :  []  ) ) )  )  ) )
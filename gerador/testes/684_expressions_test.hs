main :: IO ()
main = print ( if  if  False  &&  False  then  ((\x0 ->   True ) )( False )  else  ((\x0 ->   False ) )(9)  then  let x0 =  ( head ( (  (  ((\x0 ->  x0) )(7)  )  :  (  ((\x0 ->  x0) )(2)  )  :  (  ((\x0 ->  6) )(10)  )  :  (  ((\x0 ->  7) )(5)  )  :  (  ((\x0 ->  x0) )(10)  )  :  (  ((\x0 ->  6) )(6)  )  :  (  ((\x0 ->  x0) )(1)  )  :  (  ((\x0 ->  x0) )(4)  )  :  (  ((\x0 ->  8) )(8)  )  :  (  ((\x0 ->  x0) )(7)  )  :  (  ((\x0 ->  x0) )(1)  )  :  (  ((\x0 ->  x0) )(5)  )  :  (  ((\x0 ->  1) )(5)  )  :  (  ((\x0 ->  2) )(8)  )  :  (  ((\x0 ->  3) )(7)  )  :  (  ((\x0 ->  x0) )(2)  )  :  (  ((\x0 ->  4) )(7)  )  :  (  ((\x0 ->  x0) )(9)  )  :  (  ((\x0 ->  x0) )(9)  )  :  (  ((\x0 ->  x0) )(9)  )  :  (  ((\x0 ->  4) )(5)  )  :  (  ((\x0 ->  6) )(5)  )  :  (  ((\x0 ->  7) )(1)  )  :  (  ((\x0 ->  9) )(5)  )  :  []  ) ) )  in  if  False  then  (  (  (  ( 6 )  :  ( 10 )  :  ( 1 )  :  ( 7 )  :  ( 4 )  :  ( 10 )  :  ( 6 )  :  ( 2 )  :  ( 6 )  :  ( 10 )  :  ( 1 )  :  ( 9 )  :  ( 9 )  :  ( 10 )  :  ( 4 )  :  ( 5 )  :  ( 4 )  :  ( 6 )  :  ( 4 )  :  ( 1 )  :  ( 4 )  :  ( 5 )  :  ( 7 )  :  ( 8 )  :  ( 9 )  :  ( 2 )  :  ( 6 )  :  ( 5 )  :  ( 8 )  :  ( 8 )  :  []  )  )  :  (  (  ( 10 )  :  ( 5 )  :  ( 3 )  :  ( 7 )  :  ( 2 )  :  ( 6 )  :  ( 6 )  :  ( 3 )  :  ( 2 )  :  ( 6 )  :  []  )  )  :  (  (  ( 8 )  :  ( 3 )  :  ( 1 )  :  ( 8 )  :  ( 8 )  :  ( 1 )  :  ( 2 )  :  ( 2 )  :  ( 1 )  :  ( 9 )  :  ( 10 )  :  ( 1 )  :  ( 2 )  :  ( 2 )  :  ( 1 )  :  ( 4 )  :  ( 10 )  :  ( 1 )  :  ( 4 )  :  ( 3 )  :  ( 10 )  :  ( 2 )  :  []  )  )  :  []  )  else  (  (  (  ( 1 )  :  []  )  )  :  (  (  ( 6 )  :  ( 2 )  :  ( 4 )  :  ( 9 )  :  []  )  )  :  (  (  ( 9 )  :  ( 3 )  :  ( 2 )  :  ( 7 )  :  ( 4 )  :  ( 4 )  :  ( 8 )  :  ( 2 )  :  ( 9 )  :  ( 3 )  :  ( 8 )  :  ( 7 )  :  ( 4 )  :  []  )  )  :  (  (  ( 9 )  :  ( 2 )  :  ( 6 )  :  ( 1 )  :  ( 5 )  :  ( 3 )  :  ( 3 )  :  ( 6 )  :  ( 1 )  :  ( 2 )  :  ( 6 )  :  ( 5 )  :  ( 8 )  :  ( 9 )  :  ( 9 )  :  ( 1 )  :  ( 2 )  :  ( 2 )  :  ( 10 )  :  ( 3 )  :  ( 9 )  :  ( 7 )  :  ( 9 )  :  ( 3 )  :  ( 3 )  :  []  )  )  :  (  (  ( 8 )  :  ( 3 )  :  []  )  )  :  (  (  ( 10 )  :  ( 3 )  :  ( 9 )  :  ( 3 )  :  ( 3 )  :  ( 2 )  :  ( 7 )  :  ( 10 )  :  ( 1 )  :  ( 3 )  :  ( 4 )  :  ( 2 )  :  ( 6 )  :  ( 1 )  :  []  )  )  :  (  (  ( 6 )  :  ( 8 )  :  ( 2 )  :  []  )  )  :  []  )  else  let x0 =  if  False  then  ((\x0 ->   False ) )(5)  else  ((\x0 ->   True ) )(10)  in  if  True  then  (  (  (  ( 5 )  :  ( 4 )  :  ( 7 )  :  ( 10 )  :  ( 8 )  :  ( 3 )  :  ( 1 )  :  ( 4 )  :  ( 6 )  :  ( 7 )  :  ( 1 )  :  []  )  )  :  (  (  ( 9 )  :  ( 1 )  :  ( 3 )  :  ( 7 )  :  ( 2 )  :  ( 8 )  :  []  )  )  :  (  (  ( 2 )  :  ( 3 )  :  ( 3 )  :  []  )  )  :  (  (  ( 2 )  :  ( 4 )  :  []  )  )  :  (  (  ( 8 )  :  ( 6 )  :  ( 6 )  :  ( 7 )  :  ( 6 )  :  ( 1 )  :  ( 6 )  :  ( 6 )  :  []  )  )  :  (  (  ( 2 )  :  ( 7 )  :  ( 1 )  :  ( 7 )  :  []  )  )  :  (  (  ( 1 )  :  ( 6 )  :  ( 4 )  :  ( 9 )  :  ( 10 )  :  ( 4 )  :  ( 6 )  :  ( 5 )  :  ( 3 )  :  ( 5 )  :  ( 2 )  :  ( 4 )  :  ( 10 )  :  ( 1 )  :  ( 6 )  :  ( 8 )  :  ( 3 )  :  ( 4 )  :  ( 3 )  :  ( 9 )  :  ( 10 )  :  ( 4 )  :  ( 5 )  :  ( 3 )  :  ( 2 )  :  []  )  )  :  []  )  else  (  (  (  ( 9 )  :  ( 5 )  :  ( 9 )  :  []  )  )  :  (  (  ( 4 )  :  ( 7 )  :  ( 6 )  :  ( 2 )  :  ( 7 )  :  ( 9 )  :  ( 5 )  :  ( 10 )  :  ( 2 )  :  ( 2 )  :  ( 7 )  :  ( 5 )  :  ( 3 )  :  ( 2 )  :  ( 4 )  :  ( 7 )  :  ( 10 )  :  ( 1 )  :  ( 3 )  :  ( 4 )  :  ( 1 )  :  ( 6 )  :  ( 7 )  :  []  )  )  :  (  (  ( 4 )  :  []  )  )  :  []  ) )
main :: IO ()
main = print ( ((\x0 ->   ((\x1 ->   (  (  ((\x2 ->   ((\x3 ->  7) )(7) ) )( (  (  False  )  :  (  True  )  :  ( x1 )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  []  ) )  )  :  (  ((\x2 ->   ((\x3 ->  9) )(9) ) )( (  (  False  )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  (  False  )  :  ( x1 )  :  (  False  )  :  []  ) )  )  :  (  ((\x2 ->   ((\x3 ->  x3) )(3) ) )( (  ( x1 )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  ( x1 )  :  (  True  )  :  (  True  )  :  ( x1 )  :  (  True  )  :  []  ) )  )  :  []  ) ) )( False ) ) )( if  True  then  let x0 =  False  in  ((\x1 ->   ((\x2 ->  x2) )(3) ) )( (  ( 2 )  :  ( 3 )  :  ( 10 )  :  ( 10 )  :  ( 6 )  :  ( 4 )  :  ( 8 )  :  []  ) )  else  if  True  then  ((\x0 ->   ((\x1 ->  4) )(8) ) )( (  ( 9 )  :  ( 10 )  :  ( 2 )  :  ( 4 )  :  ( 2 )  :  ( 2 )  :  ( 10 )  :  ( 4 )  :  ( 7 )  :  ( 2 )  :  ( 8 )  :  ( 9 )  :  ( 4 )  :  ( 6 )  :  ( 9 )  :  ( 5 )  :  ( 10 )  :  ( 5 )  :  ( 2 )  :  ( 2 )  :  ( 8 )  :  ( 3 )  :  ( 5 )  :  ( 2 )  :  ( 2 )  :  ( 3 )  :  ( 8 )  :  []  ) )  else  ((\x0 ->   ((\x1 ->  4) )(7) ) )( (  ( 8 )  :  ( 3 )  :  ( 10 )  :  ( 1 )  :  ( 7 )  :  ( 5 )  :  ( 4 )  :  ( 2 )  :  ( 9 )  :  ( 10 )  :  ( 8 )  :  ( 8 )  :  ( 1 )  :  ( 7 )  :  ( 4 )  :  []  ) ) ) )
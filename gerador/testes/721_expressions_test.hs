main :: IO ()
main = print ( let x0 =  let x0 =  if  True  then  (  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  )  else  (  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  )  in 4 - 9 in  if  if  False  then  True  else  False  then  let x0 =  True  in  (  (  (  (  ((\x1 ->  x1) )(x0)  )  :  (  ((\x1 ->  x1) )(x0)  )  :  (  ((\x1 ->   True ) )(x0)  )  :  (  ((\x1 ->  x1) )( True )  )  :  []  )  )  :  (  (  (  ((\x1 ->  x1) )(x0)  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )(x0)  )  :  (  ((\x1 ->   False ) )(x0)  )  :  (  ((\x1 ->  x1) )(x0)  )  :  (  ((\x1 ->  x1) )(x0)  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )(x0)  )  :  []  )  )  :  []  )  else  let x0 = 8 in  (  (  (  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->   True ) )( True )  )  :  []  )  )  :  (  (  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  []  )  )  :  (  (  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  []  )  )  :  (  (  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   True ) )( True )  )  :  []  )  )  :  (  (  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  []  )  )  :  (  (  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  []  )  )  :  (  (  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   False ) )( False )  )  :  []  )  )  :  (  (  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   False ) )( False )  )  :  []  )  )  :  (  (  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  []  )  )  :  (  (  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  []  )  )  :  []  ) )
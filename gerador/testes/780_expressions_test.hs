main :: IO ()
main = print ( ( head ( (  (  if  ( head ( (  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  ) ) )  then  let x0 = 9 in  ((\x1 ->  x1) )( False )  else  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )(8)  )  :  (  let x0 = 8 in  ((\x1 ->   False ) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   True ) )( False )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   True ) )( True )  )  :  (  ((\x0 ->   True ) )( True )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   True ) )( False )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   False ) )( False )  )  :  []  ) ) ) )
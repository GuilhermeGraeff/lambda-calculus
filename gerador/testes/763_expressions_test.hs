main :: IO ()
main = print ( ((\x0 ->   let x0 =  False  in  ((\x1 ->   (  (  ((\x2 ->  x1) )( False )  )  :  (  ((\x2 ->  x1) )( True )  )  :  (  ((\x2 ->  x1) )( False )  )  :  (  ((\x2 ->  8) )(x0)  )  :  (  ((\x2 ->  4) )(x0)  )  :  (  ((\x2 ->  x1) )(x0)  )  :  []  ) ) )(3) ) )( if  let x0 =  True  in x0 then  ( head ( (  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  ) ) )  else  False ) )
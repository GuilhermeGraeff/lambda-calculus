main :: IO ()
main = print ( let x0 =  ( head ( (  (  if  True  then  (  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  )  else  (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  )  )  :  []  ) ) )  in  ( head ( (  (  ((\x0 ->   ((\x1 ->   ((\x2 ->   ((\x3 ->   True ) )(x0) ) )( (  ( x0 )  :  ( 5 )  :  ( 1 )  :  ( x0 )  :  []  ) ) ) )( False ) ) )(8)  )  :  (  ((\x1 ->   ((\x2 ->   ((\x3 ->  x1) )(10) ) )( (  ( 1 )  :  ( 10 )  :  ( 5 )  :  ( 3 )  :  ( 7 )  :  ( 3 )  :  ( 6 )  :  ( 8 )  :  ( 8 )  :  []  ) ) ) )( True )  )  :  (  ((\x1 ->   ((\x2 ->   ((\x3 ->  x1) )(4) ) )( (  ( 6 )  :  ( 7 )  :  ( 4 )  :  ( 8 )  :  ( 4 )  :  ( 5 )  :  ( 3 )  :  ( 4 )  :  ( 10 )  :  ( 7 )  :  ( 2 )  :  ( 2 )  :  ( 4 )  :  ( 7 )  :  ( 7 )  :  ( 6 )  :  ( 6 )  :  ( 2 )  :  ( 5 )  :  ( 7 )  :  ( 6 )  :  ( 3 )  :  ( 2 )  :  ( 6 )  :  ( 7 )  :  ( 5 )  :  []  ) ) ) )( False )  )  :  (  ((\x1 ->   ((\x2 ->   ((\x3 ->  x1) )(1) ) )( (  ( 8 )  :  ( 5 )  :  ( 5 )  :  ( 8 )  :  ( 7 )  :  ( 6 )  :  ( 2 )  :  ( 10 )  :  []  ) ) ) )( False )  )  :  (  ((\x1 ->   ((\x2 ->   ((\x3 ->  x1) )(9) ) )( (  ( 2 )  :  ( 6 )  :  ( 8 )  :  ( 10 )  :  ( 8 )  :  []  ) ) ) )( True )  )  :  (  ((\x1 ->   ((\x2 ->   ((\x3 ->  x1) )(10) ) )( (  ( 3 )  :  []  ) ) ) )( False )  )  :  (  ((\x1 ->   ((\x2 ->   ((\x3 ->  x1) )(9) ) )( (  ( 6 )  :  ( 3 )  :  ( 9 )  :  ( 9 )  :  ( 1 )  :  ( 8 )  :  ( 7 )  :  ( 5 )  :  ( 10 )  :  ( 1 )  :  ( 5 )  :  ( 1 )  :  ( 5 )  :  ( 5 )  :  ( 6 )  :  []  ) ) ) )( False )  )  :  (  ((\x1 ->   ((\x2 ->   ((\x3 ->  x1) )(8) ) )( (  ( 1 )  :  ( 9 )  :  []  ) ) ) )( True )  )  :  []  ) ) ) )
main :: IO ()
main = print ( ( head ( (  (  let x0 =  ( head ( (  (  (  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  )  )  :  []  ) ) )  in  ( head ( (  (  (  (  ((\x1 ->   ((\x2 ->  5) )( False ) ) )( ((\x1 ->  x1) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  6) )( True ) ) )( ((\x1 ->  x1) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  10) )( False ) ) )( ((\x1 ->   True ) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  10) )( False ) ) )( ((\x1 ->  x1) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  2) )( False ) ) )( ((\x1 ->   True ) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  4) )( False ) ) )( ((\x1 ->  x1) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  1) )( False ) ) )( ((\x1 ->   True ) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  2) )( True ) ) )( ((\x1 ->   True ) )( False ) )  )  :  []  )  )  :  (  (  (  ((\x1 ->   ((\x2 ->  6) )( False ) ) )( ((\x1 ->   True ) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  1) )( True ) ) )( ((\x1 ->   False ) )( True ) )  )  :  []  )  )  :  (  (  (  ((\x1 ->   ((\x2 ->  2) )( False ) ) )( ((\x1 ->  x1) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  1) )( False ) ) )( ((\x1 ->  x1) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  7) )( True ) ) )( ((\x1 ->   True ) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  2) )( True ) ) )( ((\x1 ->  x1) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  6) )( True ) ) )( ((\x1 ->  x1) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  5) )( True ) ) )( ((\x1 ->   True ) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  4) )( False ) ) )( ((\x1 ->  x1) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  4) )( True ) ) )( ((\x1 ->   False ) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  4) )( True ) ) )( ((\x1 ->   False ) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  5) )( True ) ) )( ((\x1 ->   True ) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  1) )( False ) ) )( ((\x1 ->   True ) )( True ) )  )  :  (  ((\x1 ->   ((\x2 ->  4) )( False ) ) )( ((\x1 ->   True ) )( False ) )  )  :  (  ((\x1 ->   ((\x2 ->  5) )( True ) ) )( ((\x1 ->   False ) )( False ) )  )  :  []  )  )  :  []  ) ) )  )  :  []  ) ) ) )
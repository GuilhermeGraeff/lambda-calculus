main :: IO ()
main = print ( let x0 =  ( head ( (  (  if  False  then  ((\x0 ->   ((\x1 ->  8) )(7) ) )( ((\x0 ->   True ) )(9) )  else  ((\x0 ->   ((\x1 ->  9) )(2) ) )( ((\x0 ->   False ) )(4) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )(6) ) )( ((\x0 ->   True ) )(9) )  )  :  (  ((\x0 ->   ((\x1 ->  1) )(8) ) )( ((\x0 ->   True ) )(6) )  )  :  (  ((\x0 ->   ((\x1 ->  1) )(8) ) )( ((\x0 ->   True ) )(8) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )(1) ) )( ((\x0 ->   True ) )(6) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )(2) ) )( ((\x0 ->   True ) )(7) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )(6) ) )( ((\x0 ->   False ) )(1) )  )  :  (  ((\x0 ->   ((\x1 ->  10) )(9) ) )( ((\x0 ->   False ) )(5) )  )  :  (  ((\x0 ->   ((\x1 ->  6) )(1) ) )( ((\x0 ->   True ) )(6) )  )  :  (  ((\x0 ->   ((\x1 ->  3) )(8) ) )( ((\x0 ->   True ) )(6) )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )(5) ) )( ((\x0 ->   False ) )(10) )  )  :  []  ) ) )  in  let x1 =  if  True  then  ((\x1 ->  x1) )( False )  else  ((\x1 ->  x1) )( True )  in  if  True  then  (  (  ((\x2 ->   ((\x3 ->  x3) )( False ) ) )(1)  )  :  (  ((\x2 ->   ((\x3 ->  x3) )( False ) ) )(3)  )  :  (  ((\x2 ->   ((\x3 ->   True ) )( False ) ) )(8)  )  :  (  ((\x2 ->   ((\x3 ->  x3) )( False ) ) )(4)  )  :  (  ((\x2 ->   ((\x3 ->  x3) )( False ) ) )(10)  )  :  []  )  else  (  (  ((\x2 ->   ((\x3 ->  x3) )( True ) ) )(5)  )  :  (  ((\x2 ->   ((\x3 ->   True ) )( True ) ) )(10)  )  :  (  ((\x2 ->   ((\x3 ->  x3) )( True ) ) )(2)  )  :  (  ((\x2 ->   ((\x3 ->   False ) )( True ) ) )(10)  )  :  (  ((\x2 ->   ((\x3 ->  x3) )( False ) ) )(2)  )  :  []  ) )
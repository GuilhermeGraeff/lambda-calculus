main :: IO ()
main = print ( ((\x0 ->   ( head ( (  (  ((\x0 ->  5) )( ((\x0 ->   (  (  True  )  :  (  False  )  :  []  ) ) )( (  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  []  ) ) ) ) )( let x0 =  if  False  then  ((\x0 ->  9) )(4)  else  ((\x0 ->  x0) )(6)  in  if  True  then  ((\x1 ->   (  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  ) ) )( (  ( 7 )  :  ( 2 )  :  []  ) )  else  ((\x1 ->   (  (  False  )  :  (  True  )  :  []  ) ) )( (  ( 10 )  :  ( 8 )  :  ( 7 )  :  ( 3 )  :  ( 5 )  :  ( 10 )  :  ( 5 )  :  []  ) ) ) )
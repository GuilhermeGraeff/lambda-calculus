main :: IO ()
main = print ( if  let x0 =  ( head ( (  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   True ) )( True )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   True ) )( True )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  []  ) ) )  in  (  True  )  then  let x0 =  ((\x0 ->   (  ( 5 )  :  ( x0 )  :  ( 4 )  :  ( 5 )  :  ( x0 )  :  ( x0 )  :  ( 1 )  :  ( x0 )  :  ( 2 )  :  ( x0 )  :  ( 4 )  :  ( x0 )  :  ( 4 )  :  ( x0 )  :  ( 4 )  :  ( x0 )  :  ( 2 )  :  []  ) ) )(4)  in  if  True  then  ((\x0 ->   (  (  ((\x1 ->   False ) )(1)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->   False ) )(7)  )  :  []  ) ) )( True )  else  ((\x0 ->   (  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->   True ) )(6)  )  :  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->   False ) )(1)  )  :  (  ((\x1 ->  x0) )(10)  )  :  (  ((\x1 ->   True ) )(1)  )  :  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->   False ) )(1)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->   False ) )(9)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->  x0) )(1)  )  :  (  ((\x1 ->  x0) )(6)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->  x0) )(1)  )  :  []  ) ) )( True )  else  if  let x0 =  True  in  False  then  ( head ( (  (  ((\x0 ->   (  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->   True ) )(10)  )  :  (  ((\x1 ->   False ) )(2)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   True ) )(7)  )  :  (  ((\x1 ->   True ) )(6)  )  :  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->   False ) )(6)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   False ) )(1)  )  :  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->  x0) )(4)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->   False ) )(9)  )  :  (  ((\x1 ->   False ) )(6)  )  :  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->  x0) )(6)  )  :  (  ((\x1 ->  x0) )(10)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(9)  )  :  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->  x0) )(7)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->  x0) )(8)  )  :  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->  x0) )(8)  )  :  (  ((\x1 ->   True ) )(7)  )  :  (  ((\x1 ->  x0) )(6)  )  :  (  ((\x1 ->  x0) )(6)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->  x0) )(6)  )  :  (  ((\x1 ->  x0) )(10)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->  x0) )(1)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->  x0) )(10)  )  :  (  ((\x1 ->   True ) )(8)  )  :  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->  x0) )(10)  )  :  (  ((\x1 ->   False ) )(5)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(7)  )  :  []  ) ) )( False )  )  :  (  ((\x0 ->   (  (  ((\x1 ->  x0) )(9)  )  :  (  ((\x1 ->  x0) )(8)  )  :  (  ((\x1 ->  x0) )(9)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->  x0) )(5)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->  x0) )(10)  )  :  []  ) ) )( False )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(3)  )  :  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->   True ) )(1)  )  :  (  ((\x1 ->  x0) )(10)  )  :  []  ) ) )( False )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->  x0) )(8)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   True ) )(8)  )  :  (  ((\x1 ->  x0) )(8)  )  :  (  ((\x1 ->   True ) )(10)  )  :  (  ((\x1 ->  x0) )(7)  )  :  (  ((\x1 ->  x0) )(1)  )  :  []  ) ) )( False )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   True ) )(10)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->  x0) )(6)  )  :  (  ((\x1 ->  x0) )(8)  )  :  (  ((\x1 ->  x0) )(10)  )  :  (  ((\x1 ->   True ) )(3)  )  :  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->  x0) )(8)  )  :  (  ((\x1 ->   False ) )(6)  )  :  (  ((\x1 ->   True ) )(8)  )  :  (  ((\x1 ->   False ) )(8)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->  x0) )(4)  )  :  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->   True ) )(2)  )  :  (  ((\x1 ->  x0) )(6)  )  :  (  ((\x1 ->   True ) )(3)  )  :  []  ) ) )( False )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->   False ) )(3)  )  :  (  ((\x1 ->  x0) )(1)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->   True ) )(1)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   False ) )(4)  )  :  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->   True ) )(5)  )  :  (  ((\x1 ->  x0) )(6)  )  :  (  ((\x1 ->   True ) )(5)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->   True ) )(2)  )  :  (  ((\x1 ->   False ) )(10)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   False ) )(6)  )  :  []  ) ) )( True )  )  :  (  ((\x0 ->   (  (  ((\x1 ->  x0) )(3)  )  :  (  ((\x1 ->  x0) )(9)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->   False ) )(2)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->   False ) )(1)  )  :  []  ) ) )( False )  )  :  (  ((\x0 ->   (  (  ((\x1 ->  x0) )(2)  )  :  (  ((\x1 ->   True ) )(3)  )  :  []  ) ) )( False )  )  :  []  ) ) )  else  (  ((\x0 ->   (  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->   True ) )(4)  )  :  (  ((\x1 ->  x0) )(10)  )  :  (  ((\x1 ->   False ) )(8)  )  :  (  ((\x1 ->   False ) )(6)  )  :  (  ((\x1 ->   False ) )(7)  )  :  (  ((\x1 ->   False ) )(3)  )  :  (  ((\x1 ->   False ) )(5)  )  :  (  ((\x1 ->  x0) )(8)  )  :  (  ((\x1 ->  x0) )(5)  )  :  (  ((\x1 ->   False ) )(7)  )  :  []  ) ) )( True )  ) )
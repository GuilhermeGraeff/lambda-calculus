main :: IO ()
main = print ( let x0 =  ( head ( (  (  let x0 =  False  in  (  ( 8 )  :  ( 10 )  :  ( 2 )  :  ( 3 )  :  ( 5 )  :  ( 4 )  :  ( 4 )  :  []  )  )  :  (  (  ( 7 )  :  ( 4 )  :  ( 7 )  :  ( 2 )  :  []  )  )  :  (  (  ( 10 )  :  ( 7 )  :  ( 2 )  :  ( 10 )  :  ( 10 )  :  ( 4 )  :  ( 10 )  :  ( 4 )  :  ( 7 )  :  ( 4 )  :  []  )  )  :  []  ) ) )  in  ((\x1 ->   ((\x2 ->   (  (  (  (  True  )  :  (  False  )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  True  )  :  ( x1 )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  True  )  :  ( x1 )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  ( x1 )  :  (  False  )  :  (  True  )  :  ( x1 )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  []  )  )  :  (  (  (  True  )  :  []  )  )  :  (  (  ( x1 )  :  (  True  )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  (  True  )  :  (  True  )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  ( x1 )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  (  False  )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  (  False  )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  (  False  )  :  ( x1 )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  ( x1 )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  []  )  )  :  (  (  (  False  )  :  ( x1 )  :  (  True  )  :  (  True  )  :  (  False  )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  []  )  )  :  (  (  ( x1 )  :  (  True  )  :  (  True  )  :  (  False  )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  (  False  )  :  (  False  )  :  (  True  )  :  ( x1 )  :  []  )  )  :  (  (  (  False  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  (  True  )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  []  )  )  :  (  (  (  True  )  :  ( x1 )  :  ( x1 )  :  []  )  )  :  (  (  (  True  )  :  ( x1 )  :  (  True  )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  (  False  )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  (  False  )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  (  True  )  :  ( x1 )  :  (  True  )  :  []  )  )  :  (  (  ( x1 )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  []  )  )  :  (  (  ( x1 )  :  ( x1 )  :  (  False  )  :  ( x1 )  :  (  False  )  :  ( x1 )  :  (  False  )  :  ( x1 )  :  (  False  )  :  (  True  )  :  ( x1 )  :  (  True  )  :  []  )  )  :  (  (  ( x1 )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  []  )  )  :  []  ) ) )( (  (  ((\x2 ->  x2) )(x1)  )  :  (  ((\x2 ->  x2) )(x1)  )  :  (  ((\x2 ->  x2) )( True )  )  :  []  ) ) ) )( let x0 =  False  in  False ) )
main :: IO ()
main = print ( if  False  &&  True  ||  if  True  then  False  else  False  then  if  ((\x0 ->   True ) )( False )  then  ( head ( (  (  (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  )  )  :  []  ) ) )  else  ((\x0 ->   (  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  ) ) )(5)  else  let x0 =  (  (  ( 6 )  :  ( 1 )  :  []  )  )  in  let x1 =  False  in  (  ( x1 )  :  []  ) )
main :: IO ()
main = print ( let x0 =  if  False  &&  True  then  let x0 = 5 in  (  ( 10 )  :  ( 10 )  :  ( 7 )  :  ( x0 )  :  ( 7 )  :  ( x0 )  :  ( 5 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( 1 )  :  ( x0 )  :  ( 1 )  :  ( 2 )  :  ( 2 )  :  ( 10 )  :  ( x0 )  :  []  )  else  ((\x0 ->   (  ( 5 )  :  ( x0 )  :  ( 10 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( 3 )  :  ( x0 )  :  ( 9 )  :  ( x0 )  :  ( 8 )  :  ( x0 )  :  ( 5 )  :  ( x0 )  :  ( 1 )  :  ( x0 )  :  ( x0 )  :  ( 3 )  :  ( x0 )  :  ( x0 )  :  ( 3 )  :  ( 8 )  :  []  ) ) )(2)  in  ( head ( (  (  ( head ( (  (  ((\x0 ->   True ) )(5)  )  :  (  ((\x0 ->   True ) )(6)  )  :  (  ((\x0 ->   True ) )(5)  )  :  (  ((\x0 ->   True ) )(4)  )  :  (  ((\x0 ->   False ) )(9)  )  :  (  ((\x0 ->   False ) )(9)  )  :  (  ((\x0 ->   True ) )(5)  )  :  (  ((\x0 ->   True ) )(4)  )  :  (  ((\x0 ->   True ) )(7)  )  :  (  ((\x0 ->   False ) )(5)  )  :  (  ((\x0 ->   True ) )(9)  )  :  (  ((\x0 ->   True ) )(10)  )  :  (  ((\x0 ->   True ) )(1)  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )(6)  )  :  (  ((\x0 ->   True ) )(6)  )  :  (  ((\x0 ->   True ) )(3)  )  :  (  ((\x0 ->   True ) )(8)  )  :  (  ((\x0 ->   False ) )(9)  )  :  (  ((\x0 ->   False ) )(1)  )  :  (  ((\x0 ->   False ) )(2)  )  :  (  ((\x0 ->   False ) )(1)  )  :  (  ((\x0 ->   False ) )(5)  )  :  (  ((\x0 ->   False ) )(3)  )  :  (  ((\x0 ->   True ) )(1)  )  :  (  ((\x0 ->   True ) )(4)  )  :  (  ((\x0 ->   True ) )(1)  )  :  (  ((\x0 ->   True ) )(1)  )  :  (  ((\x0 ->   False ) )(1)  )  :  (  ((\x0 ->   True ) )(8)  )  :  (  ((\x0 ->   True ) )(6)  )  :  (  ((\x0 ->   True ) )(8)  )  :  (  ((\x0 ->   False ) )(3)  )  :  (  ((\x0 ->   True ) )(4)  )  :  (  ((\x0 ->   False ) )(3)  )  :  (  ((\x0 ->   True ) )(3)  )  :  (  ((\x0 ->   False ) )(7)  )  :  (  ((\x0 ->   True ) )(7)  )  :  (  ((\x0 ->   False ) )(8)  )  :  (  ((\x0 ->   True ) )(1)  )  :  (  ((\x0 ->   True ) )(5)  )  :  (  ((\x0 ->   False ) )(10)  )  :  (  ((\x0 ->   True ) )(1)  )  :  []  ) ) ) )
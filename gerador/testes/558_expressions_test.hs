main :: IO ()
main = print ( let x0 =  if  let x0 = 1 in  True  then  if  False  then  (  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  []  )  else  (  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   True ) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   True ) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  []  )  else  ((\x0 ->   (  (  ((\x1 ->   False ) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  []  ) ) )(3)  in  let x1 =  ( head ( (  (  (  ( 8 )  :  ( 6 )  :  ( 7 )  :  ( 10 )  :  ( 7 )  :  ( 9 )  :  ( 7 )  :  ( 6 )  :  ( 4 )  :  ( 9 )  :  ( 6 )  :  ( 9 )  :  ( 10 )  :  ( 3 )  :  ( 2 )  :  ( 7 )  :  ( 1 )  :  ( 4 )  :  ( 3 )  :  ( 7 )  :  ( 3 )  :  ( 2 )  :  ( 10 )  :  ( 1 )  :  ( 4 )  :  ( 7 )  :  ( 9 )  :  ( 1 )  :  ( 3 )  :  ( 8 )  :  ( 7 )  :  ( 4 )  :  ( 10 )  :  ( 1 )  :  ( 6 )  :  ( 7 )  :  ( 7 )  :  ( 4 )  :  ( 6 )  :  []  )  )  :  (  (  ( 4 )  :  ( 2 )  :  ( 7 )  :  ( 7 )  :  ( 8 )  :  []  )  )  :  (  (  ( 7 )  :  ( 8 )  :  ( 8 )  :  ( 1 )  :  ( 8 )  :  ( 2 )  :  ( 5 )  :  ( 3 )  :  ( 6 )  :  ( 3 )  :  ( 5 )  :  []  )  )  :  (  (  ( 8 )  :  ( 3 )  :  ( 6 )  :  ( 7 )  :  ( 3 )  :  ( 2 )  :  ( 6 )  :  ( 3 )  :  ( 6 )  :  ( 9 )  :  ( 9 )  :  []  )  )  :  (  (  ( 4 )  :  ( 6 )  :  ( 9 )  :  ( 6 )  :  ( 8 )  :  ( 2 )  :  ( 4 )  :  ( 5 )  :  ( 2 )  :  ( 2 )  :  ( 4 )  :  ( 3 )  :  ( 8 )  :  ( 10 )  :  ( 5 )  :  ( 5 )  :  ( 6 )  :  []  )  )  :  []  ) ) )  in  (  ((\x0 ->   ((\x1 ->   (  ( 2 )  :  ( 2 )  :  []  ) ) )( ((\x1 ->  x1) )( False ) ) ) )( (  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->   True ) )( True )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   True ) )( False )  )  :  (  ((\x0 ->   True ) )( True )  )  :  []  ) )  ) )
main :: IO ()
main = print ( if  True  ||  False  &&  ((\x0 ->   False ) )(6)  then  let x0 =  ( head ( (  ( 8 )  :  ( 4 )  :  ( 5 )  :  ( 6 )  :  ( 9 )  :  ( 5 )  :  ( 2 )  :  ( 7 )  :  ( 1 )  :  ( 8 )  :  ( 3 )  :  ( 5 )  :  ( 10 )  :  ( 7 )  :  ( 6 )  :  []  ) ) )  in  let x1 = 2 in  ((\x2 ->   ((\x3 ->   False ) )(x2) ) )( False )  else  if  (  True  )  then  ( head ( (  (  ((\x0 ->   ((\x1 ->   True ) )(x0) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )(x0) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )(x0) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )(x0) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( True ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )(x0) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )(x0) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )(x0) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )(x0) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )(x0) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( True ) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( False ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )(x0) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )( True ) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )(x0) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( False ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( True ) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( True )  )  :  (  ((\x0 ->   ((\x1 ->   True ) )(x0) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->   False ) )(x0) ) )( False )  )  :  (  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( True )  )  :  []  ) ) )  else  if  False  then  ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( False )  else  ((\x0 ->   ((\x1 ->   True ) )( False ) ) )( False ) )
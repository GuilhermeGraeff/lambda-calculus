main :: IO ()
main = print ( (  if  let x0 = 4 in  False  then  if  True  then  ((\x0 ->   (  (  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  (  False  )  :  ( x0 )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  True  )  :  (  True  )  :  ( x0 )  :  (  True  )  :  (  False  )  :  ( x0 )  :  (  True  )  :  (  True  )  :  ( x0 )  :  (  True  )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  (  False  )  :  []  )  )  :  (  (  ( x0 )  :  (  True  )  :  (  False  )  :  []  )  )  :  []  ) ) )( False )  else  ((\x0 ->   (  (  (  (  False  )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  True  )  :  (  True  )  :  ( x0 )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  (  True  )  :  (  False  )  :  ( x0 )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  ( x0 )  :  (  True  )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  (  True  )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  ( x0 )  :  []  )  )  :  []  ) ) )( False )  else  ((\x0 ->   ((\x1 ->   (  (  (  (  True  )  :  (  True  )  :  ( x1 )  :  []  )  )  :  (  (  ( x1 )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  ( x1 )  :  ( x1 )  :  (  True  )  :  (  True  )  :  ( x1 )  :  (  False  )  :  ( x1 )  :  (  False  )  :  (  True  )  :  ( x1 )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  False  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  (  False  )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  []  )  )  :  (  (  (  False  )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  []  )  )  :  (  (  (  True  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  []  )  )  :  (  (  (  False  )  :  ( x1 )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  )  )  :  []  ) ) )( False ) ) )(10)  ) )
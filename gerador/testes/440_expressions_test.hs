main :: IO ()
main = print ( let x0 =  if  if  False  then  True  else  False  then  ( head ( (  (  ((\x0 ->   (  ( 5 )  :  ( 3 )  :  ( 3 )  :  ( 3 )  :  ( 3 )  :  ( 5 )  :  ( 9 )  :  ( 4 )  :  []  ) ) )( ((\x0 ->  1) )( False ) )  )  :  (  ((\x0 ->   (  ( 2 )  :  ( 10 )  :  ( 2 )  :  ( 6 )  :  ( 6 )  :  ( 6 )  :  ( 4 )  :  ( 6 )  :  ( 10 )  :  ( 6 )  :  ( 5 )  :  ( 5 )  :  ( 4 )  :  ( 4 )  :  ( 2 )  :  ( 9 )  :  ( 1 )  :  ( 10 )  :  ( 5 )  :  ( 4 )  :  ( 6 )  :  ( 7 )  :  ( 8 )  :  ( 1 )  :  ( 9 )  :  ( 7 )  :  []  ) ) )( ((\x0 ->  9) )( True ) )  )  :  (  ((\x0 ->   (  ( 1 )  :  []  ) ) )( ((\x0 ->  3) )( True ) )  )  :  (  ((\x0 ->   (  ( 4 )  :  ( 7 )  :  ( 1 )  :  ( 2 )  :  ( 6 )  :  ( 2 )  :  ( 10 )  :  ( 1 )  :  ( 9 )  :  ( 2 )  :  ( 6 )  :  ( 5 )  :  ( 6 )  :  ( 4 )  :  []  ) ) )( ((\x0 ->  10) )( True ) )  )  :  (  ((\x0 ->   (  ( 5 )  :  ( 8 )  :  ( 9 )  :  ( 8 )  :  ( 6 )  :  ( 4 )  :  ( 10 )  :  ( 4 )  :  ( 3 )  :  ( 9 )  :  ( 9 )  :  ( 6 )  :  ( 1 )  :  ( 6 )  :  ( 8 )  :  ( 3 )  :  ( 5 )  :  []  ) ) )( ((\x0 ->  1) )( True ) )  )  :  (  ((\x0 ->   (  ( 9 )  :  []  ) ) )( ((\x0 ->  5) )( True ) )  )  :  (  ((\x0 ->   (  ( 2 )  :  ( 8 )  :  ( 5 )  :  ( 3 )  :  ( 9 )  :  ( 5 )  :  ( 6 )  :  ( 2 )  :  ( 8 )  :  ( 10 )  :  ( 3 )  :  ( 10 )  :  ( 6 )  :  ( 10 )  :  ( 8 )  :  ( 5 )  :  ( 6 )  :  ( 7 )  :  ( 5 )  :  ( 4 )  :  ( 10 )  :  ( 6 )  :  ( 7 )  :  ( 9 )  :  ( 1 )  :  ( 8 )  :  []  ) ) )( ((\x0 ->  10) )( True ) )  )  :  (  ((\x0 ->   (  ( 3 )  :  ( 3 )  :  []  ) ) )( ((\x0 ->  6) )( False ) )  )  :  (  ((\x0 ->   (  ( 2 )  :  ( 5 )  :  []  ) ) )( ((\x0 ->  9) )( True ) )  )  :  (  ((\x0 ->   (  ( 7 )  :  ( 9 )  :  ( 1 )  :  ( 1 )  :  ( 5 )  :  ( 6 )  :  ( 7 )  :  ( 6 )  :  ( 7 )  :  ( 8 )  :  ( 2 )  :  ( 9 )  :  ( 4 )  :  ( 8 )  :  ( 2 )  :  ( 6 )  :  ( 5 )  :  ( 10 )  :  ( 8 )  :  ( 1 )  :  ( 6 )  :  ( 6 )  :  ( 7 )  :  []  ) ) )( ((\x0 ->  10) )( True ) )  )  :  []  ) ) )  else  ( head ( (  (  ((\x0 ->   (  ( 4 )  :  ( 3 )  :  []  ) ) )( ((\x0 ->  8) )( True ) )  )  :  []  ) ) )  in  False  ||  False  &&  True )
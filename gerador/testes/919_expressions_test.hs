main :: IO ()
main = print ( if  let x0 =  (  True  )  in  ((\x1 ->  x1) )(x0)  then  ((\x0 ->   (  (  ((\x1 ->  x0) )( ((\x1 ->  x1) )(x0) )  )  :  (  ((\x1 ->  9) )( ((\x1 ->  x1) )(2) )  )  :  (  ((\x1 ->  x0) )( ((\x1 ->  6) )(3) )  )  :  (  ((\x1 ->  10) )( ((\x1 ->  1) )(x0) )  )  :  (  ((\x1 ->  x0) )( ((\x1 ->  2) )(4) )  )  :  []  ) ) )(5 * 9)  else  (  let x0 =  True  in  (  (  ((\x1 ->  10) )( ((\x1 ->  x1) )(10) )  )  :  (  ((\x1 ->  10) )( ((\x1 ->  x1) )(10) )  )  :  (  ((\x1 ->  8) )( ((\x1 ->  9) )(7) )  )  :  (  ((\x1 ->  2) )( ((\x1 ->  2) )(10) )  )  :  []  )  ) )
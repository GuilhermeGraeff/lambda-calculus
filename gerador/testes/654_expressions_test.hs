main :: IO ()
main = print ( if  ((\x0 ->   True ) )( False )  ||  let x0 = 9 in  False  then  let x0 =  ( head ( (  (  ((\x0 ->  6) )(6)  )  :  (  ((\x0 ->  3) )(1)  )  :  (  ((\x0 ->  x0) )(5)  )  :  (  ((\x0 ->  10) )(1)  )  :  (  ((\x0 ->  8) )(5)  )  :  (  ((\x0 ->  4) )(1)  )  :  (  ((\x0 ->  x0) )(4)  )  :  (  ((\x0 ->  x0) )(1)  )  :  (  ((\x0 ->  6) )(5)  )  :  (  ((\x0 ->  1) )(10)  )  :  (  ((\x0 ->  10) )(8)  )  :  (  ((\x0 ->  x0) )(4)  )  :  []  ) ) )  in  ( head ( (  (  (  ( 4 )  :  ( 2 )  :  ( 2 )  :  []  )  )  :  (  (  ( 4 )  :  ( 3 )  :  ( 9 )  :  ( 9 )  :  ( 6 )  :  ( 1 )  :  []  )  )  :  (  (  ( 9 )  :  ( 8 )  :  ( 8 )  :  ( 10 )  :  ( 5 )  :  ( 10 )  :  ( 9 )  :  ( 4 )  :  ( 8 )  :  ( 4 )  :  ( 2 )  :  ( 5 )  :  ( 5 )  :  ( 7 )  :  ( 8 )  :  ( 6 )  :  ( 2 )  :  ( 6 )  :  ( 3 )  :  ( 3 )  :  ( 9 )  :  ( 1 )  :  ( 2 )  :  ( 9 )  :  ( 8 )  :  ( 9 )  :  ( 3 )  :  ( 3 )  :  ( 10 )  :  ( 9 )  :  ( 9 )  :  ( 5 )  :  ( 3 )  :  ( 4 )  :  ( 5 )  :  []  )  )  :  (  (  ( 7 )  :  ( 9 )  :  ( 3 )  :  ( 7 )  :  ( 7 )  :  ( 8 )  :  ( 6 )  :  ( 3 )  :  ( 6 )  :  ( 10 )  :  ( 8 )  :  ( 5 )  :  ( 7 )  :  ( 6 )  :  ( 8 )  :  ( 2 )  :  ( 7 )  :  ( 3 )  :  ( 1 )  :  ( 5 )  :  ( 5 )  :  ( 9 )  :  ( 9 )  :  ( 3 )  :  ( 6 )  :  ( 2 )  :  ( 5 )  :  ( 8 )  :  ( 1 )  :  ( 2 )  :  ( 5 )  :  ( 9 )  :  ( 8 )  :  ( 9 )  :  ( 7 )  :  ( 9 )  :  ( 6 )  :  ( 8 )  :  ( 6 )  :  ( 3 )  :  ( 2 )  :  ( 9 )  :  []  )  )  :  (  (  ( 1 )  :  []  )  )  :  []  ) ) )  else  let x0 =  let x0 =  False  in x0 in  if  True  then  (  ( 7 )  :  ( 7 )  :  ( 2 )  :  ( 4 )  :  ( 4 )  :  ( 7 )  :  ( 8 )  :  ( 3 )  :  ( 4 )  :  ( 6 )  :  ( 9 )  :  ( 8 )  :  ( 9 )  :  ( 1 )  :  ( 10 )  :  ( 2 )  :  []  )  else  (  ( 6 )  :  ( 3 )  :  ( 9 )  :  ( 1 )  :  []  ) )
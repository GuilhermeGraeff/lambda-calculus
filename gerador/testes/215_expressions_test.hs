main :: IO ()
main = print ( if  ((\x0 ->   True ) )( ((\x0 ->   (  (  False  )  :  (  False  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  []  ) ) )( False ) )  then  let x0 =  let x0 = 1 in  (  ( 6 )  :  ( 5 )  :  ( 5 )  :  ( x0 )  :  []  )  in  ((\x1 ->   ((\x2 ->   (  (  False  )  :  ( x2 )  :  (  True  )  :  (  False  )  :  (  False  )  :  ( x2 )  :  []  ) ) )( False ) ) )(8)  else  (  ((\x0 ->   ((\x1 ->   (  ( x1 )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )( False ) ) )( False )  ) )
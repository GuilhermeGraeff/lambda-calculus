main :: IO ()
main = print ( if  False  then  if  ((\x0 ->   False ) )( True )  then  let x0 =  False  in  (  (  True  )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  )  else  let x0 = 5 in  (  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  )  else  let x0 =  False  &&  True  in  ((\x1 ->   (  ( x1 )  :  (  False  )  :  (  True  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  (  True  )  :  ( x1 )  :  (  True  )  :  (  True  )  :  (  False  )  :  ( x1 )  :  ( x1 )  :  ( x1 )  :  (  True  )  :  (  True  )  :  ( x1 )  :  []  ) ) )( True ) )
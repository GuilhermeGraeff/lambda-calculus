main :: IO ()
main = print ( ((\x0 ->   if  False  then  (  (  ((\x1 ->  3) )( True )  )  :  (  ((\x1 ->  9) )( True )  )  :  (  ((\x1 ->  7) )( False )  )  :  (  ((\x1 ->  8) )( False )  )  :  []  )  else  (  (  ((\x1 ->  4) )( True )  )  :  (  ((\x1 ->  3) )( True )  )  :  (  ((\x1 ->  3) )( True )  )  :  (  ((\x1 ->  2) )( False )  )  :  (  ((\x1 ->  5) )( False )  )  :  (  ((\x1 ->  3) )( True )  )  :  (  ((\x1 ->  2) )( True )  )  :  (  ((\x1 ->  4) )( False )  )  :  (  ((\x1 ->  8) )( False )  )  :  (  ((\x1 ->  6) )( False )  )  :  (  ((\x1 ->  2) )( True )  )  :  (  ((\x1 ->  10) )( True )  )  :  (  ((\x1 ->  2) )( True )  )  :  (  ((\x1 ->  1) )( False )  )  :  (  ((\x1 ->  3) )( False )  )  :  (  ((\x1 ->  4) )( True )  )  :  (  ((\x1 ->  8) )( False )  )  :  (  ((\x1 ->  7) )( False )  )  :  (  ((\x1 ->  9) )( True )  )  :  (  ((\x1 ->  2) )( True )  )  :  (  ((\x1 ->  7) )( True )  )  :  (  ((\x1 ->  2) )( False )  )  :  (  ((\x1 ->  2) )( False )  )  :  (  ((\x1 ->  5) )( False )  )  :  (  ((\x1 ->  3) )( False )  )  :  (  ((\x1 ->  1) )( False )  )  :  (  ((\x1 ->  10) )( True )  )  :  (  ((\x1 ->  1) )( False )  )  :  (  ((\x1 ->  2) )( False )  )  :  (  ((\x1 ->  7) )( False )  )  :  []  ) ) )( if  ( head ( (  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )  then  if  True  then  ((\x0 ->   False ) )( ((\x0 ->  x0) )(5) )  else  ((\x0 ->   True ) )( ((\x0 ->  2) )(2) )  else  (  ((\x0 ->   False ) )( ((\x0 ->  x0) )(4) )  ) ) )
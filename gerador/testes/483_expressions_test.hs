main :: IO ()
main = print ( if  False  ||  True  ||  True  then  (  ((\x0 ->   ((\x1 ->   ((\x2 ->   ((\x3 ->  8) )(x0) ) )( (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  ) ) ) )( (  (  (  ( 7 )  :  ( x0 )  :  ( 4 )  :  ( 7 )  :  ( x0 )  :  ( 2 )  :  ( x0 )  :  ( x0 )  :  ( 5 )  :  ( 6 )  :  ( 5 )  :  ( 7 )  :  ( 7 )  :  ( x0 )  :  ( 3 )  :  ( x0 )  :  ( 9 )  :  ( 9 )  :  ( x0 )  :  ( x0 )  :  ( 2 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( 7 )  :  []  )  )  :  (  (  ( x0 )  :  ( 8 )  :  ( 6 )  :  []  )  )  :  (  (  ( 8 )  :  ( 2 )  :  ( 6 )  :  ( 5 )  :  ( 1 )  :  ( 9 )  :  ( x0 )  :  ( 8 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  ( 9 )  :  ( x0 )  :  ( x0 )  :  ( 10 )  :  ( x0 )  :  ( 9 )  :  ( 6 )  :  ( x0 )  :  []  )  )  :  (  (  ( x0 )  :  ( 3 )  :  []  )  )  :  []  ) ) ) )(7)  )  else  if  ((\x0 ->  x0) )( True )  then  let x0 =  False  in  ((\x1 ->   ((\x2 ->   ((\x3 ->  x3) )(6) ) )( (  ( x0 )  :  (  True  )  :  (  True  )  :  (  False  )  :  ( x0 )  :  (  False  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  (  False  )  :  []  ) ) ) )( (  (  (  ( 6 )  :  ( 5 )  :  ( 5 )  :  ( 8 )  :  ( 8 )  :  ( 7 )  :  ( 8 )  :  []  )  )  :  (  (  ( 7 )  :  ( 3 )  :  ( 5 )  :  []  )  )  :  (  (  ( 6 )  :  []  )  )  :  (  (  ( 7 )  :  ( 4 )  :  []  )  )  :  []  ) )  else  if  True  then  ((\x0 ->   ((\x1 ->   ((\x2 ->  3) )(7) ) )( (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  Trueelse  ((\x0 ->   ((\x1 ->   ((\x2 ->  6) )(9) ) )( (  (  False  )  :  (  True  )  :  (  False  )  :  []  ) ) ) )( (  (  (  ( 9 )  :  []  )  )  :  (  (  ( 2 )  :  ( 10 )  :  []  )  )  :  (  (  ( 3 )  :  ( 1 )  :  ( 1 )  :  ( 9 )  :  []  )  )  :  []  ) ) )
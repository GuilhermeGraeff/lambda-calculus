main :: IO ()
main = print ( (  let x0 =  if  True  then 4 else 10 in  ( head ( (  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  6) )( False ) ) )( (  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  8) )( False ) ) )( (  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  2) )( False ) ) )( (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  6) )( False ) ) )( (  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  10) )( False ) ) )( (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  7) )( False ) ) )( (  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  5) )( False ) ) )( (  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  8) )( False ) ) )( (  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  6) )( False ) ) )( (  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  1) )( False ) ) )( (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  2) )( True ) ) )( (  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  5) )( True ) ) )( (  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  4) )( False ) ) )( (  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  4) )( False ) ) )( (  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  5) )( False ) ) )( (  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  6) )( False ) ) )( (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   ((\x1 ->  6) )( True ) ) )( (  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  ) ) )  )  :  []  ) ) )  ) )
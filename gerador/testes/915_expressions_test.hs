main :: IO ()
main = print ( (  (  let x0 =  False  in  (  (  ((\x1 ->   ((\x2 ->  x2) )( True ) ) )( ((\x1 ->  x1) )(6) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )(x0) ) )( ((\x1 ->  3) )(9) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )(x0) ) )( ((\x1 ->  9) )(6) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )( True ) ) )( ((\x1 ->  6) )(1) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )( True ) ) )( ((\x1 ->  x1) )(2) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )(x0) ) )( ((\x1 ->  4) )(6) )  )  :  (  ((\x1 ->   ((\x2 ->   True ) )( False ) ) )( ((\x1 ->  4) )(8) )  )  :  (  ((\x1 ->   ((\x2 ->   False ) )(x0) ) )( ((\x1 ->  x1) )(1) )  )  :  (  ((\x1 ->   ((\x2 ->   False ) )( True ) ) )( ((\x1 ->  x1) )(9) )  )  :  (  ((\x1 ->   ((\x2 ->   False ) )( True ) ) )( ((\x1 ->  x1) )(2) )  )  :  (  ((\x1 ->   ((\x2 ->   True ) )(x0) ) )( ((\x1 ->  x1) )(8) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )( False ) ) )( ((\x1 ->  10) )(3) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )(x0) ) )( ((\x1 ->  x1) )(4) )  )  :  (  ((\x1 ->   ((\x2 ->   False ) )(x0) ) )( ((\x1 ->  x1) )(5) )  )  :  (  ((\x1 ->   ((\x2 ->   True ) )( False ) ) )( ((\x1 ->  x1) )(6) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )( True ) ) )( ((\x1 ->  x1) )(10) )  )  :  (  ((\x1 ->   ((\x2 ->   False ) )( False ) ) )( ((\x1 ->  6) )(1) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )(x0) ) )( ((\x1 ->  x1) )(8) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )( True ) ) )( ((\x1 ->  x1) )(8) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )( False ) ) )( ((\x1 ->  8) )(2) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )( True ) ) )( ((\x1 ->  9) )(5) )  )  :  (  ((\x1 ->   ((\x2 ->  x2) )(x0) ) )( ((\x1 ->  x1) )(10) )  )  :  []  )  )  ) )
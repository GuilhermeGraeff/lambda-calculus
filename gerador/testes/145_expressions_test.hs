main :: IO ()
main = print ( let x0 =  ( head ( (  (  ((\x0 ->  7) )( False )  )  :  ( 3 )  :  ( 5 )  :  ( 2 )  :  ( 2 )  :  ( 6 )  :  ( 3 )  :  ( 2 )  :  ( 9 )  :  ( 10 )  :  ( 9 )  :  ( 2 )  :  ( 8 )  :  ( 8 )  :  ( 1 )  :  ( 8 )  :  ( 9 )  :  ( 5 )  :  ( 9 )  :  ( 7 )  :  ( 4 )  :  ( 1 )  :  ( 2 )  :  ( 5 )  :  []  ) ) )  in  ((\x1 ->   (  (  (  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->   False ) )( True )  )  :  []  )  )  :  (  (  (  ((\x2 ->   False ) )( False )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   False ) )( True )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   True ) )( True )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   True ) )( False )  )  :  (  ((\x2 ->  x2) )( True )  )  :  (  ((\x2 ->  x2) )( False )  )  :  (  ((\x2 ->   False ) )( False )  )  :  []  )  )  :  (  (  (  ((\x2 ->  x2) )( False )  )  :  []  )  )  :  []  ) ) )( (  ((\x0 ->  1) )(5)  ) ) )
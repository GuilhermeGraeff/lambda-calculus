main :: IO ()
main = print ( if  ((\x0 ->   False ) )( ((\x0 ->   ((\x1 ->  x1) )( True ) ) )( False ) )  then  ( head ( (  (  (  ((\x0 ->   True ) )( ((\x0 ->   (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )( (  ( 4 )  :  ( 5 )  :  []  ) ) )  )  )  :  (  ((\x0 ->   False ) )( ((\x0 ->   (  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  ) ) )( (  ( 9 )  :  ( 2 )  :  ( 10 )  :  ( 1 )  :  ( 6 )  :  ( 3 )  :  ( 9 )  :  ( 9 )  :  ( 10 )  :  ( 4 )  :  ( 5 )  :  ( 4 )  :  ( 1 )  :  ( 10 )  :  ( 3 )  :  []  ) ) )  )  :  (  ((\x0 ->   True ) )( ((\x0 ->   (  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  ) ) )( (  ( 1 )  :  ( 1 )  :  ( 9 )  :  ( 7 )  :  ( 2 )  :  ( 3 )  :  ( 6 )  :  ( 4 )  :  []  ) ) )  )  :  []  ) ) )  else  if  ( head ( (  (  False  )  :  (  True  )  :  (  False  )  :  []  ) ) )  then  (  ((\x0 ->   False ) )( ((\x0 ->   (  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  ) ) )( (  ( 7 )  :  ( 1 )  :  ( 10 )  :  []  ) ) )  )  else  if  True  then  ((\x0 ->   False ) )( ((\x0 ->   (  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  ) ) )( (  ( 1 )  :  ( 6 )  :  ( 6 )  :  ( 10 )  :  ( 7 )  :  ( 5 )  :  ( 8 )  :  ( 2 )  :  ( 8 )  :  ( 8 )  :  ( 7 )  :  ( 7 )  :  ( 8 )  :  []  ) ) )  else  ((\x0 ->   False ) )( ((\x0 ->   (  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  ) ) )( (  ( 5 )  :  []  ) ) ) )
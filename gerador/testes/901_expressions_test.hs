main :: IO ()
main = print ( if  ((\x0 ->   False ) )( let x0 =  True  in  (  ( 10 )  :  ( 1 )  :  ( 10 )  :  ( 9 )  :  ( 2 )  :  ( 8 )  :  ( 10 )  :  ( 10 )  :  ( 5 )  :  ( 5 )  :  ( 2 )  :  []  ) )  then  ( head ( (  (  ( head ( (  (  ((\x0 ->   False ) )(1)  )  :  (  ((\x0 ->   True ) )(5)  )  :  (  ((\x0 ->   True ) )(2)  )  :  (  ((\x0 ->   True ) )(10)  )  :  (  ((\x0 ->   False ) )(10)  )  :  (  ((\x0 ->   True ) )(1)  )  :  (  ((\x0 ->   False ) )(6)  )  :  (  ((\x0 ->   False ) )(5)  )  :  (  ((\x0 ->   False ) )(2)  )  :  (  ((\x0 ->   False ) )(10)  )  :  (  ((\x0 ->   False ) )(2)  )  :  (  ((\x0 ->   True ) )(2)  )  :  (  ((\x0 ->   True ) )(10)  )  :  (  ((\x0 ->   False ) )(8)  )  :  (  ((\x0 ->   True ) )(8)  )  :  (  ((\x0 ->   True ) )(8)  )  :  []  ) ) )  )  :  (  ((\x0 ->   False ) )(3)  )  :  (  ((\x0 ->   True ) )(7)  )  :  (  ((\x0 ->   False ) )(1)  )  :  (  ((\x0 ->   True ) )(5)  )  :  (  ((\x0 ->   True ) )(3)  )  :  (  ((\x0 ->   True ) )(8)  )  :  (  ((\x0 ->   False ) )(3)  )  :  []  ) ) )  else  if  True  &&  False  then  if  True  then  ((\x0 ->   False ) )(6)  else  ((\x0 ->   True ) )(7)  else  if  False  then  ((\x0 ->   False ) )(5)  else  ((\x0 ->   True ) )(5) )
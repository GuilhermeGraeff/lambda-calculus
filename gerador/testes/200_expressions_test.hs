main :: IO ()
main = print ( if  let x0 =  let x0 =  False  in 10 in  False  then  ((\x0 ->   (  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   False ) )( True )  )  :  (  ((\x1 ->   True ) )( True )  )  :  (  ((\x1 ->  x1) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->  x1) )( True )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->   True ) )( False )  )  :  (  ((\x1 ->  x1) )( True )  )  :  []  ) ) )( ((\x0 ->   ((\x1 ->  x0) )(3) ) )( True ) )  else  ( head ( (  (  ( head ( (  (  (  (  ((\x0 ->   True ) )( False )  )  :  (  ((\x0 ->   True ) )( True )  )  :  []  )  )  :  []  ) ) )  )  :  (  (  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   True ) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->   True ) )( False )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   False ) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   True ) )( False )  )  :  (  ((\x0 ->   True ) )( False )  )  :  (  ((\x0 ->   False ) )( False )  )  :  []  )  )  :  (  (  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->   False ) )( True )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->  x0) )( False )  )  :  (  ((\x0 ->  x0) )( True )  )  :  (  ((\x0 ->   True ) )( True )  )  :  []  )  )  :  []  ) ) ) )
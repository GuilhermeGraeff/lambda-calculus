main :: IO ()
main = print ( let x0 =  if  let x0 = 7 in  True  then  ( head ( (  (  ((\x0 ->   True ) )( (  ( 5 )  :  ( 5 )  :  ( 1 )  :  ( 3 )  :  ( 4 )  :  []  ) )  )  :  (  ((\x0 ->   True ) )( (  ( 4 )  :  ( 7 )  :  ( 7 )  :  ( 4 )  :  ( 1 )  :  ( 8 )  :  ( 8 )  :  ( 1 )  :  ( 1 )  :  ( 7 )  :  ( 10 )  :  ( 8 )  :  ( 6 )  :  ( 2 )  :  []  ) )  )  :  (  ((\x0 ->   False ) )( (  ( 5 )  :  ( 7 )  :  ( 7 )  :  ( 7 )  :  ( 10 )  :  ( 4 )  :  ( 9 )  :  []  ) )  )  :  (  ((\x0 ->   True ) )( (  ( 10 )  :  ( 7 )  :  ( 7 )  :  ( 6 )  :  ( 10 )  :  ( 4 )  :  ( 4 )  :  ( 8 )  :  ( 9 )  :  ( 7 )  :  ( 5 )  :  ( 2 )  :  ( 2 )  :  ( 7 )  :  ( 6 )  :  ( 5 )  :  []  ) )  )  :  (  ((\x0 ->   True ) )( (  ( 1 )  :  ( 9 )  :  []  ) )  )  :  []  ) ) )  else  (  ((\x0 ->   True ) )( (  ( 4 )  :  ( 9 )  :  ( 3 )  :  ( 1 )  :  ( 9 )  :  ( 8 )  :  ( 8 )  :  ( 8 )  :  ( 5 )  :  ( 8 )  :  ( 1 )  :  ( 8 )  :  ( 9 )  :  ( 7 )  :  ( 9 )  :  ( 10 )  :  ( 4 )  :  ( 2 )  :  []  ) )  )  in  if  ( head ( (  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  ) ) )  then  if  False  then  (  (  (  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  False  )  :  []  )  )  :  (  (  (  True  )  :  (  False  )  :  (  False  )  :  (  True  )  :  (  False  )  :  []  )  )  :  []  )  else  (  (  (  (  True  )  :  []  )  )  :  []  )  else  let x0 =  False  in  (  (  (  (  True  )  :  (  False  )  :  (  False  )  :  ( x0 )  :  (  False  )  :  []  )  )  :  (  (  (  False  )  :  (  True  )  :  (  True  )  :  (  False  )  :  (  True  )  :  ( x0 )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  (  (  (  True  )  :  ( x0 )  :  ( x0 )  :  []  )  )  :  []  ) )